(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    594507,      12143]
NotebookOptionsPosition[    584426,      11971]
NotebookOutlinePosition[    584906,      11989]
CellTagsIndexPosition[    584863,      11986]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Streljanje v ameri\[SHacek]kih \[SHacek]olah", "Title",
 CellChangeTimes->{{3.90171442380812*^9, 3.9017144757277613`*^9}, {
   3.902227903955675*^9, 3.902227921002844*^9}, 
   3.9023224967864485`*^9},ExpressionUUID->"ff787cd7-15b9-40e1-8d06-\
c97c7cbba341"],

Cell["\<\
Analiza \[SHacek]tevila smrtnih \[ZHacek]rtev in vzrokov za smrtonosne \
strelske pohode v ameri\[SHacek]kih \[SHacek]olah\
\>", "Subtitle",
 CellChangeTimes->{{3.9017144800995016`*^9, 3.901714488144844*^9}, {
  3.901714523377122*^9, 3.9017146118966913`*^9}, {3.901714664712441*^9, 
  3.9017146824011345`*^9}, {3.902407343734032*^9, 3.90240734507907*^9}, {
  3.9024100434212866`*^9, 
  3.9024100441447754`*^9}},ExpressionUUID->"12950a24-74d2-4fd1-a402-\
f1fb5cdad967"],

Cell[CellGroupData[{

Cell["Pridobivanje podatkov", "Section",
 CellChangeTimes->{{3.9017147420346622`*^9, 3.901714755201377*^9}, {
  3.901714789002909*^9, 3.901714801875253*^9}, {3.901717654228932*^9, 
  3.9017176551701393`*^9}, {3.9017177360809126`*^9, 
  3.901717737444189*^9}},ExpressionUUID->"7d391312-81d9-4e1b-902c-\
0b0d83379a68"],

Cell["\<\
Za pridobivanje podatkov bom uporabila razli\[CHacek]ne spletne strani, \
katerih povezave so napisane spodaj. Nekatere podatke bom uredila v Excelu in \
jih nato vnesla v Mathematico.\
\>", "Text",
 CellChangeTimes->{{3.901717978988882*^9, 3.901717989412722*^9}, {
  3.901718031327469*^9, 3.9017180468237777`*^9}, {3.901718416355754*^9, 
  3.901718424583642*^9}, {3.901719674632389*^9, 3.9017196853686647`*^9}, {
  3.901727660790978*^9, 3.9017277453312674`*^9}, {3.9020698674877796`*^9, 
  3.9020699030580873`*^9}},ExpressionUUID->"7f3b7532-d761-4362-845f-\
ed8a1b9cb7ee"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Hyperlink", "[", 
  "\"\<https://en.wikipedia.org/wiki/List_of_school_shootings_in_the_United_\
States_(before_2000)\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.901719728418713*^9, 3.9017197513413687`*^9}, {
  3.9017197880327435`*^9, 3.9017197952057886`*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"f71982ac-59f2-4936-8914-1502992d3735"],

Cell[BoxData[
 TemplateBox[{
  "\"https://en.wikipedia.org/wiki/List_of_school_shootings_in_the_United_\
States_(before_2000)\"", 
   "https://en.wikipedia.org/wiki/List_of_school_shootings_in_the_United_\
States_(before_2000)"},
  "HyperlinkURL"]], "Output",
 CellChangeTimes->{3.901719798644663*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"a3859ce9-484c-4c61-9d24-525c05b224f8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Hyperlink", "[", 
  "\"\<https://en.wikipedia.org/wiki/List_of_school_shootings_in_the_United_\
States_(2000%E2%80%93present)\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.901719805782816*^9, 3.90171983138402*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"092ae620-faab-4438-b514-365553f94e96"],

Cell[BoxData[
 TemplateBox[{
  "\"https://en.wikipedia.org/wiki/List_of_school_shootings_in_the_United_\
States_(2000%E2%80%93present)\"", 
   "https://en.wikipedia.org/wiki/List_of_school_shootings_in_the_United_\
States_(2000%E2%80%93present)"},
  "HyperlinkURL"]], "Output",
 CellChangeTimes->{3.9017198340897007`*^9},
 CellLabel->"Out[2]=",ExpressionUUID->"14db4ab0-ba81-4b9d-a5e1-3af0fd243d4e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Hyperlink", "[", 
  "\"\<https://en.wikipedia.org/wiki/List_of_school_shootings_in_the_United_\
States_by_death_toll\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.90171993024354*^9, 3.9017199373599005`*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"f28571e0-8754-4086-a224-95cfb4a90d6b"],

Cell[BoxData[
 TemplateBox[{
  "\"https://en.wikipedia.org/wiki/List_of_school_shootings_in_the_United_\
States_by_death_toll\"", 
   "https://en.wikipedia.org/wiki/List_of_school_shootings_in_the_United_\
States_by_death_toll"},
  "HyperlinkURL"]], "Output",
 CellChangeTimes->{3.901719939851735*^9},
 CellLabel->"Out[4]=",ExpressionUUID->"aaf34bc6-82a3-40af-898e-ec88987afea9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Hyperlink", "[", 
  "\"\<https://worldpopulationreview.com/country-rankings/school-shootings-by-\
country\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.902301870946891*^9, 3.902301893887332*^9}},
 CellLabel->"In[77]:=",ExpressionUUID->"b000566b-ef5c-495e-ac31-b3dc15d6e908"],

Cell[BoxData[
 TemplateBox[{
  "\"https://worldpopulationreview.com/country-rankings/school-shootings-by-\
country\"", 
   "https://worldpopulationreview.com/country-rankings/school-shootings-by-\
country"},
  "HyperlinkURL"]], "Output",
 CellChangeTimes->{3.9023018955711966`*^9},
 CellLabel->"Out[77]=",ExpressionUUID->"a3bee71c-9919-44fb-8d48-1dbb72e096a0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Hyperlink", "[", 
  "\"\<https://www.alfred.edu/about/news/studies/lethal-school-violence/why-\
do-shootings.cfm\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.901719944394292*^9, 3.9017199597252936`*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"3cc95962-cd25-469e-ba0b-c7bfdbf9ec56"],

Cell[BoxData[
 TemplateBox[{
  "\"https://www.alfred.edu/about/news/studies/lethal-school-violence/why-do-\
shootings.cfm\"", 
   "https://www.alfred.edu/about/news/studies/lethal-school-violence/why-do-\
shootings.cfm"},
  "HyperlinkURL"]], "Output",
 CellChangeTimes->{3.901719962161254*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"7fda41f2-53ac-4486-b1b3-e130c5af2ee8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Hyperlink", "[", 
  "\"\<https://theconversation.com/5-ways-to-reduce-school-shootings-183965\>\
\"", "]"}]], "Input",
 CellChangeTimes->{{3.902312737674305*^9, 3.9023127464299655`*^9}},
 CellLabel->
  "In[255]:=",ExpressionUUID->"f70719dc-31ab-48f6-8bdc-b321363d4ba8"],

Cell[BoxData[
 TemplateBox[{
  "\"https://theconversation.com/5-ways-to-reduce-school-shootings-183965\"", 
   "https://theconversation.com/5-ways-to-reduce-school-shootings-183965"},
  "HyperlinkURL"]], "Output",
 CellChangeTimes->{3.9023127488142643`*^9},
 CellLabel->
  "Out[255]=",ExpressionUUID->"fdb5f0a4-a24a-4474-9ee6-53d6f4fa851b"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Uvod", "Section",
 CellChangeTimes->{{3.9020659281663537`*^9, 
  3.902065928905579*^9}},ExpressionUUID->"dd8af3e4-3ddc-46cd-9ae0-\
58f469bb2e4b"],

Cell["\<\
Streljanja v ameri\[SHacek]kih \[SHacek]olah predstavljajo pere\[CHacek]o \
problematiko, ki se je v zadnjih desetletjih globoko ukoreninila v ameri\
\[SHacek]ki dru\[ZHacek]bi. Pogosti incidenti streljanj povzro\[CHacek]ajo \
veliko \[SHacek]tevilo smrtnih \[ZHacek]rtev in trajne psihi\[CHacek]ne \
posledice pri pre\[ZHacek]ivelih. 
V projektni nalogi bom analizirala \[SHacek]tevilo streljanj in smrtnih \
\[ZHacek]rtev v ameri\[SHacek]kih \[SHacek]olah in univerzah. Poleg tega bom \
podatke primerjala z ostalimi dr\[ZHacek]avami. Poiskala bom tudi vzroke, ki \
privedejo do streljanj.\
\>", "Text",
 CellChangeTimes->{{3.902066185254706*^9, 3.9020662472426624`*^9}, {
  3.902066323621712*^9, 3.902066354762744*^9}, {3.902066463291168*^9, 
  3.9020665053670845`*^9}, {3.9022171385168653`*^9, 3.902217170796522*^9}, {
  3.9022172070589433`*^9, 3.9022172953676004`*^9}, {3.9022173959533753`*^9, 
  3.902217410226205*^9}, {3.9022278576503*^9, 3.90222789487283*^9}, {
  3.902322539362626*^9, 3.9023225536357293`*^9}, {3.902406674056797*^9, 
  3.902406675186386*^9}},ExpressionUUID->"f9abefa3-fd59-4151-bd54-\
a48b088893f6"]
}, Open  ]],

Cell["Strelski pohodi pred letom 2000", "Section",
 CellChangeTimes->{{3.901714845282539*^9, 
  3.901714871850564*^9}},ExpressionUUID->"daab2a93-bd22-4001-9b8d-\
e18ca464748b"],

Cell[CellGroupData[{

Cell["19. stoletje", "Subtitle",
 CellChangeTimes->{{3.9022021299266715`*^9, 3.902202138628154*^9}, {
   3.9022042045475173`*^9, 3.9022042060460663`*^9}, 
   3.902204741450311*^9},ExpressionUUID->"93c778b0-2f36-4e4b-bd9e-\
add5a471d252"],

Cell["*desetletje 1840 == 1840 do 1849", "Text",
 CellChangeTimes->{{3.902329732693218*^9, 
  3.9023297619467125`*^9}},ExpressionUUID->"063c5712-7092-4c78-b207-\
5afce4b3352f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"podatki1", " ", "=", " ", 
  RowBox[{"Import", "[", 
   RowBox[{
   "\"\<C:\\\\Users\\\\Teja\\\\Desktop\\\\streljanja v 19. stoletju.xlsx\>\"",
     ",", " ", "\"\<Dataset\>\""}], "]"}]}]], "Input",
 CellChangeTimes->{{3.901727754460373*^9, 3.9017277570290155`*^9}, {
   3.9020667177319193`*^9, 3.9020667255948367`*^9}, {3.902066879212668*^9, 
   3.90206694794976*^9}, 3.9023296832290792`*^9},
 CellLabel->
  "In[270]:=",ExpressionUUID->"0a4626bf-e6d4-400b-840b-5b3cc32c7dec"],

Cell[BoxData[
 RowBox[{"{", 
  TagBox[
   TagBox[
    DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
     Association[
     "InitialData" -> {{
        "desetletje", "\[SHacek]tevilo streljanj", 
         "\[SHacek]tevilo smrtnih \[ZHacek]rtev"}, {1840., 1., 1.}, {1850., 
        3., 4.}, {1860., 5., 5.}, {1870., 7., 3.}, {1880., 10., 2.}, {1890., 
        6., 11.}}, "AllowEmbedding" -> True, "InitialShape" -> 
      TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`MatrixShape[7, 3], 7, 3, {All}], 
      "InitialType" -> TypeSystem`Vector[
        TypeSystem`Vector[TypeSystem`AnyType, 3], 7], "Meta" -> Association[],
       "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
      TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`MatrixShape[7, 3], 7, 3, {All}], "Type" -> 
      TypeSystem`Vector[
        TypeSystem`Vector[TypeSystem`AnyType, 3], 7], "Path" -> {}, 
      "DisplayedRowCount" -> 7, "DisplayedColumnCount" -> 3, "DataRowCount" -> 
      7, "DataColumnCount" -> 3, "SortPaths" -> {}, "SortDirections" -> {}, 
      "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
     TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
     TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
     TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
     TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
     TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
     DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
         Style[
          Grid[{{
             Item[
              Pane[
               Annotation["desetletje", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 1}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{112.00000000000001`, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation["\[SHacek]tevilo streljanj", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 2}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{190.4, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation["\[SHacek]tevilo smrtnih \[ZHacek]rtev", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 3}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{235.20000000000002`, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}]}, {
             Item[
              Pane[
               Annotation[
                RawBoxes["1840.0"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 1}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["1.0"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 2}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["1.0"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 3}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}]}, {
             Item[
              Pane[
               Annotation[
                RawBoxes["1850.0"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 1}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["3.0"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 2}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["4.0"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 3}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}]}, {
             Item[
              Pane[
               Annotation[
                RawBoxes["1860.0"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 1}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["5.0"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 2}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["5.0"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 3}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}]}, {
             Item[
              Pane[
               Annotation[
                RawBoxes["1870.0"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 1}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["7.0"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 2}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["3.0"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 3}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}]}, {
             Item[
              Pane[
               Annotation[
                RawBoxes["1880.0"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 1}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["10.0"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 2}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["2.0"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 3}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}]}, {
             Item[
              Pane[
               Annotation[
                RawBoxes["1890.0"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 1}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["6.0"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 2}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["11.0"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 3}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}]}}, 
           BaseStyle -> {
            ContextMenu -> 
             Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
               Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                 TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger,
                  TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True,
                  TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                  TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                 TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                  Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    With[{
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
             "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
           Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
           Spacings -> {0, 0}, Alignment -> Left, 
           BaseStyle -> {
            FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
             Plain}], LineBreakWithin -> False, ContextMenu -> {}, 
          NumberMarks -> False, ShowAutoStyles -> False]], 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
      Dynamic[
       TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
       TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
          Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
          
          Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
            TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
            TypeSystem`NestedGrid`PackagePrivate`datasetData[
             TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
           TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
              FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
              TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
              TypeSystem`NestedGrid`PackagePrivate`renderGrid[
              TypeSystem`NestedGrid`PackagePrivate`$state$$, 
               TypeSystem`NestedGrid`PackagePrivate`$path$$, 
               TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
               TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
               TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
               TypeSystem`NestedGrid`PackagePrivate`localHold[
               TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
              TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
             Not[
              FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
        TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
          FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
          TypeSystem`SparseGrid[
           TypeSystem`H["(data no longer present)"]], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
         TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
      DynamicModuleValues :> {}], 
     TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
       TypeSystem`PackageScope`SubViewPathbar[
       TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`updateState[
        TypeSystem`NestedGrid`PackagePrivate`$state$$, 
         TypeSystem`NestedGrid`PackagePrivate`$path$$, 
         TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
         TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
         TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
         TypeSystem`NestedGrid`PackagePrivate`localHold[
         TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
      TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
     TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
      Framed[
       Dynamic[
        Replace[
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
         TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
            TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
            Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
            TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
            Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
             Blank[]], 
            Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
             Blank[]], 
            Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
             Blank[]]] :> (
           Increment[
            TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
           TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
            TypeSystem`NestedGrid`PackagePrivate`path$; 
           TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
            TypeSystem`NestedGrid`PackagePrivate`pathType$; 
           TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
            TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
           TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
            TypeSystem`NestedGrid`PackagePrivate`localHold[
             TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
           TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
            TypeSystem`NestedGrid`PackagePrivate`path$, 
             TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
          Spacer[10], Blank[] :> Spacer[10]}], 
        TrackedSymbols :> {
         TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
       None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
       ImageSize -> {Automatic, 15}], FontSize -> 1], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
     DynamicWrapperBox[
      DynamicBox[ToBoxes[
        Dataset`DatasetContent[
        2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
         "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
         "State" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
         "VPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
         Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
         Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
         Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
         Hold[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
       ImageSizeCache->{565., {100.13403328722343`, 105.86596671277657`}},
       TrackedSymbols:>{
        TypeSystem`NestedGrid`PackagePrivate`$state$$, 
         TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
      TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
      MouseAnnotation[],
      ImageSizeCache->{565., {100.13403328722343`, 105.86596671277657`}}],
     BaseStyle->{LineBreakWithin -> False},
     DynamicModuleValues:>{},
     Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
      CreateUUID[]),
     UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
    Deploy,
    DefaultBaseStyle->"Deploy"],
   Dataset`InterpretDataset[1],
   Editable->False,
   SelectWithContents->True,
   Selectable->False], "}"}]], "Output",
 CellChangeTimes->{
  3.902066934327034*^9, 3.902067012194747*^9, 3.902311798284477*^9, {
   3.9023296222895527`*^9, 3.9023296512491393`*^9}, 3.902329685681611*^9},
 CellLabel->
  "Out[270]=",ExpressionUUID->"269b8479-a396-46d3-af95-5eb62215732d"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Vrednosti11", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"podatki1", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "i", "]"}], "]"}], "[", 
      RowBox[{"[", "2", "]"}], "]"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"i", ",", " ", "2", ",", " ", 
       RowBox[{"Length", "[", 
        RowBox[{"podatki1", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.90219794180754*^9, 3.9021979920755005`*^9}, 
   3.902199338367814*^9, 3.9021995471183376`*^9, {3.90220108269291*^9, 
   3.9022010925267277`*^9}},
 CellLabel->
  "In[271]:=",ExpressionUUID->"15755bb1-cf87-469c-b91a-8d51ad7e77b1"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Vrednosti12", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"podatki1", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "i", "]"}], "]"}], "[", 
      RowBox[{"[", "3", "]"}], "]"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"i", ",", " ", "2", ",", " ", 
       RowBox[{"Length", "[", 
        RowBox[{"podatki1", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.902197176142702*^9, 3.9021972124317513`*^9}, {
   3.9021973025412717`*^9, 3.9021973553741508`*^9}, {3.9021975058577576`*^9, 
   3.902197536874553*^9}, {3.902197695108339*^9, 3.9021977062850337`*^9}, {
   3.902197954133684*^9, 3.902197956547838*^9}, 3.9021993483617716`*^9, 
   3.90219955001737*^9},
 CellLabel->
  "In[273]:=",ExpressionUUID->"cfccdcc4-41c9-4e20-9fc1-5031fdd226e2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Graf1", " ", "=", " ", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{"Vrednosti11", ",", " ", 
     RowBox[{"DataRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"1840", ",", " ", "1890"}], "}"}]}], ",", 
     RowBox[{"PlotStyle", " ", "->", " ", "Purple"}], ",", "  ", 
     RowBox[{"PlotLegends", " ", "->", " ", 
      RowBox[{"{", "\"\<\[SHacek]tevilo streljanj\>\"", "}"}]}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", "\"\<Leto\>\"", "}"}]}], ",", " ", 
     RowBox[{"Joined", "\[Rule]", "True"}], ",", 
     RowBox[{"AxesOrigin", " ", "->", " ", 
      RowBox[{"{", 
       RowBox[{"1840", ",", " ", "0"}], "}"}]}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.9021996065478196`*^9, 3.9021997051833715`*^9}, {
   3.9021997765903425`*^9, 3.90219980784044*^9}, {3.902199925689357*^9, 
   3.902199928075876*^9}, 3.9022000614075923`*^9, 3.9022000983181753`*^9, {
   3.9022001360267906`*^9, 3.9022001390414734`*^9}, {3.9022002394378376`*^9, 
   3.9022002488886967`*^9}, {3.902200548135208*^9, 3.9022005554932175`*^9}, {
   3.902200687226303*^9, 3.9022007034655437`*^9}, {3.9022007440401535`*^9, 
   3.902200802452726*^9}, {3.902201184049779*^9, 3.9022012439703393`*^9}, {
   3.9022018092968154`*^9, 3.902202007802821*^9}, {3.9022020938333926`*^9, 
   3.902202095093113*^9}, {3.902311804840068*^9, 3.9023118064823976`*^9}},
 CellLabel->
  "In[272]:=",ExpressionUUID->"8220b28f-b0f1-4538-9234-95daca96ff1a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Graf2", " ", "=", " ", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{"Vrednosti12", ",", " ", 
     RowBox[{"DataRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"1840", ",", " ", "1890"}], "}"}]}], ",", 
     RowBox[{"PlotStyle", " ", "->", " ", "Pink"}], ",", " ", 
     RowBox[{"PlotLegends", " ", "->", " ", 
      RowBox[{"{", "\"\<\[SHacek]tevilo smrtnih \[ZHacek]rtev\>\"", "}"}]}], 
     ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", "\"\<Leto\>\"", "}"}]}], ",", " ", 
     RowBox[{"Joined", "\[Rule]", "True"}], ",", 
     RowBox[{"AxesOrigin", " ", "->", " ", 
      RowBox[{"{", 
       RowBox[{"1840", ",", " ", "0"}], "}"}]}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.902199715561885*^9, 3.902199732201082*^9}, {
   3.902199821610959*^9, 3.9021998797400026`*^9}, {3.902200128265648*^9, 
   3.902200131447383*^9}, 3.902200255684174*^9, {3.902200712810981*^9, 
   3.902200716774366*^9}, {3.902201193370592*^9, 3.9022011936683264`*^9}, {
   3.902202020732689*^9, 3.9022020605574656`*^9}, {3.9022021000371046`*^9, 
   3.9022021010650935`*^9}, {3.902311810878868*^9, 3.902311811583855*^9}},
 CellLabel->
  "In[274]:=",ExpressionUUID->"a9c3962f-32b2-4607-8ce1-182acb902b94"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"Graf1", ",", " ", "Graf2", ",", " ", 
   RowBox[{"PlotRange", "->", "Automatic"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.902199742494972*^9, 3.902199751788518*^9}, {
  3.9021998922824316`*^9, 3.9021998958303256`*^9}, {3.9022151834886465`*^9, 
  3.902215192238593*^9}},
 CellLabel->
  "In[275]:=",ExpressionUUID->"8c2f7dce-9702-4771-81f9-b11c8709a134"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[
           NCache[
            Rational[7, 360], 0.019444444444444445`]], 
          AbsoluteThickness[1.6], 
          RGBColor[0.5, 0, 0.5]], 
         LineBox[{{1840., 1.}, {1850., 3.}, {1860., 5.}, {1870., 7.}, {1880., 
          10.}, {1890., 6.}}]}}}, {{}, {}}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[
           NCache[
            Rational[7, 360], 0.019444444444444445`]], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0.5, 0.5]], 
         LineBox[{{1840., 1.}, {1850., 4.}, {1860., 5.}, {1870., 3.}, {1880., 
          2.}, {1890., 11.}}]}}}, {{}, {}}}}, {
    PlotRange -> Automatic, DisplayFunction -> Identity, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {
       FormBox["\"Leto\"", TraditionalForm], None}, AxesOrigin -> {1840., 0.},
      DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, PlotRange -> {{1840., 1890.}, {0., 10.}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"\[SHacek]tevilo streljanj\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["7", "360"], "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 0, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.33333333333333337`, 0., 0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.5`", ",", "0", ",", "0.5`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 0, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.5, 0, 0.5], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"\[SHacek]tevilo smrtnih \[ZHacek]rtev\""}, 
          "LineLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0.5]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["7", "360"], "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6666666666666666, 0.33333333333333337`, 
                    0.33333333333333337`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.5`", ",", "0.5`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0.5], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.902199753253901*^9, 3.902199786499443*^9, 3.902199897762416*^9, 
   3.902199969249264*^9, 3.9022001014984503`*^9, 3.9022001429895988`*^9, 
   3.902200266810957*^9, 3.902200560373105*^9, 3.902200693289491*^9, {
   3.9022007363444376`*^9, 3.902200753516824*^9}, {3.9022011883154593`*^9, 
   3.902201249043168*^9}, 3.9022020633258123`*^9, 3.902202104738928*^9, 
   3.9022151989508567`*^9, 3.90231181699971*^9, 3.9023297012676563`*^9},
 CellLabel->
  "Out[275]=",ExpressionUUID->"5db6d363-6080-43c3-91da-d18ce986ede7"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["20. stoletje", "Subtitle",
 CellChangeTimes->{{3.902202161870674*^9, 3.9022021642964053`*^9}, {
  3.902204217949212*^9, 
  3.902204218504117*^9}},ExpressionUUID->"e86d9172-3e26-4599-8b0e-\
048b68f304c3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"podatki2", " ", "=", " ", 
  RowBox[{"Import", "[", 
   RowBox[{
   "\"\<C:\\\\Users\\\\Teja\\\\Desktop\\\\streljanja v 20. stoletju.xlsx\>\"",
     ",", " ", "\"\<Dataset\>\""}], "]"}]}]], "Input",
 CellChangeTimes->{{3.9020671540406885`*^9, 3.9020672264748287`*^9}},
 CellLabel->
  "In[237]:=",ExpressionUUID->"130fcddf-57bf-4dc2-9f95-466ce9d1e7d0"],

Cell[BoxData[
 RowBox[{"{", 
  TagBox[
   TagBox[
    DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
     Association[
     "InitialData" -> {{
        "desetletje", "\[SHacek]tevilo streljanj", 
         "\[SHacek]tevilo smrtnih \[ZHacek]rtev"}, {1900., 13., 13.}, {1910., 
        18., 10.}, {1920., 10., 5.}, {1930., 7., 7.}, {1940., 8., 10.}, {
        1950., 32., 14.}, {1960., 20., 41.}, {1970., 45., 42.}, {1980., 65., 
        68.}, {1990., 99., 124.}}, "AllowEmbedding" -> True, "InitialShape" -> 
      TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`MatrixShape[11, 3], 11, 3, {All}], 
      "InitialType" -> TypeSystem`Vector[
        TypeSystem`Vector[TypeSystem`AnyType, 3], 11], "Meta" -> 
      Association[], "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
      TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`MatrixShape[11, 3], 11, 3, {All}], "Type" -> 
      TypeSystem`Vector[
        TypeSystem`Vector[TypeSystem`AnyType, 3], 11], "Path" -> {}, 
      "DisplayedRowCount" -> 11, "DisplayedColumnCount" -> 3, "DataRowCount" -> 
      11, "DataColumnCount" -> 3, "SortPaths" -> {}, "SortDirections" -> {}, 
      "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
     TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
     TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
     TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
     TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
     TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
     DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
         Style[
          Grid[{{
             Item[
              Pane[
               Annotation["desetletje", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 1}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{112.00000000000001`, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation["\[SHacek]tevilo streljanj", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 2}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{190.4, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation["\[SHacek]tevilo smrtnih \[ZHacek]rtev", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 3}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{235.20000000000002`, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}]}, {
             Item[
              Pane[
               Annotation[
                RawBoxes["1900.0"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 1}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["13.0"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 2}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["13.0"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 3}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}]}, {
             Item[
              Pane[
               Annotation[
                RawBoxes["1910.0"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 1}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["18.0"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 2}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["10.0"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 3}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}]}, {
             Item[
              Pane[
               Annotation[
                RawBoxes["1920.0"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 1}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["10.0"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 2}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["5.0"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 3}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}]}, {
             Item[
              Pane[
               Annotation[
                RawBoxes["1930.0"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 1}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["7.0"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 2}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["7.0"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 3}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}]}, {
             Item[
              Pane[
               Annotation[
                RawBoxes["1940.0"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 1}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["8.0"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 2}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["10.0"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 3}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}]}, {
             Item[
              Pane[
               Annotation[
                RawBoxes["1950.0"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 1}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["32.0"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 2}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["14.0"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 3}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}]}, {
             Item[
              Pane[
               Annotation[
                RawBoxes["1960.0"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 1}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["20.0"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 2}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["41.0"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 3}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}]}, {
             Item[
              Pane[
               Annotation[
                RawBoxes["1970.0"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 1}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["45.0"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 2}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["42.0"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 3}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}]}, {
             Item[
              Pane[
               Annotation[
                RawBoxes["1980.0"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 1}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["65.0"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 2}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["68.0"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 3}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}]}, {
             Item[
              Pane[
               Annotation[
                RawBoxes["1990.0"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 1}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["99.0"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 2}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["124.0"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 3}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}]}}, 
           BaseStyle -> {
            ContextMenu -> 
             Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
               Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                 TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger,
                  TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True,
                  TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                  TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                 TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                  Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
             "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
           Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
           Spacings -> {0, 0}, Alignment -> Left, 
           BaseStyle -> {
            FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
             Plain}], LineBreakWithin -> False, ContextMenu -> {}, 
          NumberMarks -> False, ShowAutoStyles -> False]], 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
      Dynamic[
       TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
       TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
          Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
          
          Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
            TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
            TypeSystem`NestedGrid`PackagePrivate`datasetData[
             TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
           TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
              FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
              TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
              TypeSystem`NestedGrid`PackagePrivate`renderGrid[
              TypeSystem`NestedGrid`PackagePrivate`$state$$, 
               TypeSystem`NestedGrid`PackagePrivate`$path$$, 
               TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
               TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
               TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
               TypeSystem`NestedGrid`PackagePrivate`localHold[
               TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
              TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
             Not[
              FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
        TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
          FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
          TypeSystem`SparseGrid[
           TypeSystem`H["(data no longer present)"]], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
         TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
      DynamicModuleValues :> {}], 
     TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
       TypeSystem`PackageScope`SubViewPathbar[
       TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`updateState[
        TypeSystem`NestedGrid`PackagePrivate`$state$$, 
         TypeSystem`NestedGrid`PackagePrivate`$path$$, 
         TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
         TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
         TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
         TypeSystem`NestedGrid`PackagePrivate`localHold[
         TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
      TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
     TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
      Framed[
       Dynamic[
        Replace[
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
         TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
            TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
            Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
            TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
            Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
             Blank[]], 
            Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
             Blank[]], 
            Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
             Blank[]]] :> (
           Increment[
            TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
           TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
            TypeSystem`NestedGrid`PackagePrivate`path$; 
           TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
            TypeSystem`NestedGrid`PackagePrivate`pathType$; 
           TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
            TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
           TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
            TypeSystem`NestedGrid`PackagePrivate`localHold[
             TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
           TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
            TypeSystem`NestedGrid`PackagePrivate`path$, 
             TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
          Spacer[10], Blank[] :> Spacer[10]}], 
        TrackedSymbols :> {
         TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
       None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
       ImageSize -> {Automatic, 15}], FontSize -> 1], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
     DynamicWrapperBox[
      DynamicBox[ToBoxes[
        Dataset`DatasetContent[
        2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
         "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
         "State" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
         "VPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
         Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
         Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
         Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
         Hold[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
       ImageSizeCache->{565., {154.13403328722342`, 159.86596671277658`}},
       TrackedSymbols:>{
        TypeSystem`NestedGrid`PackagePrivate`$state$$, 
         TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
      TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
      MouseAnnotation[],
      ImageSizeCache->{565., {154.13403328722342`, 159.86596671277658`}}],
     BaseStyle->{LineBreakWithin -> False},
     DynamicModuleValues:>{},
     Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
      CreateUUID[]),
     UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
    Deploy,
    DefaultBaseStyle->"Deploy"],
   Dataset`InterpretDataset[1],
   Editable->False,
   SelectWithContents->True,
   Selectable->False], "}"}]], "Output",
 CellChangeTimes->{{3.902067214199725*^9, 3.9020672283901367`*^9}, 
   3.9023118221709733`*^9},
 CellLabel->
  "Out[237]=",ExpressionUUID->"df250abc-559d-4fa8-a2fc-2bae7dde719c"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Vrednosti21", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"podatki2", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "i", "]"}], "]"}], "[", 
      RowBox[{"[", "2", "]"}], "]"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"i", ",", " ", "2", ",", " ", 
       RowBox[{"Length", "[", 
        RowBox[{"podatki2", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.90220144495395*^9, 3.902201448582591*^9}, {
  3.9022014840114174`*^9, 3.902201497879811*^9}},
 CellLabel->
  "In[238]:=",ExpressionUUID->"8561ade4-dd0e-4daa-908e-04b25e573e3a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Vrednosti22", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"podatki2", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "i", "]"}], "]"}], "[", 
      RowBox[{"[", "3", "]"}], "]"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"i", ",", " ", "2", ",", " ", 
       RowBox[{"Length", "[", 
        RowBox[{"podatki2", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.902201461140712*^9, 3.9022015057550783`*^9}, 
   3.9022024130413857`*^9, {3.9023118264637794`*^9, 3.9023118278097515`*^9}},
 CellLabel->
  "In[239]:=",ExpressionUUID->"3f0ada56-9654-4d02-93ee-db6b299d9e0b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Graf1", " ", "=", " ", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{"Vrednosti21", ",", " ", 
     RowBox[{"DataRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"1900", ",", " ", "1990"}], "}"}]}], ",", 
     RowBox[{"PlotStyle", " ", "->", " ", "Purple"}], ",", "  ", 
     RowBox[{"PlotLegends", " ", "->", " ", 
      RowBox[{"{", "\"\<\[SHacek]tevilo streljanj\>\"", "}"}]}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", "\"\<Leto\>\"", "}"}]}], ",", " ", 
     RowBox[{"Joined", "\[Rule]", "True"}], ",", 
     RowBox[{"AxesOrigin", " ", "->", " ", 
      RowBox[{"{", 
       RowBox[{"1900", ",", " ", "0"}], "}"}]}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.902202191899516*^9, 3.9022022112924232`*^9}, {
  3.9023118310486116`*^9, 3.9023118326444464`*^9}},
 CellLabel->
  "In[240]:=",ExpressionUUID->"4fdf0cf1-b55d-4d4c-9179-e901708f6187"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Graf2", " ", "=", " ", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{"Vrednosti22", ",", " ", 
     RowBox[{"DataRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"1900", ",", " ", "1990"}], "}"}]}], ",", 
     RowBox[{"PlotStyle", " ", "->", " ", "Pink"}], ",", " ", 
     RowBox[{"PlotLegends", " ", "->", " ", 
      RowBox[{"{", "\"\<\[SHacek]tevilo smrtnih \[ZHacek]rtev\>\"", "}"}]}], 
     ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", "\"\<Leto\>\"", "}"}]}], ",", " ", 
     RowBox[{"Joined", "\[Rule]", "True"}], ",", 
     RowBox[{"AxesOrigin", " ", "->", " ", 
      RowBox[{"{", 
       RowBox[{"1900", ",", " ", "0"}], "}"}]}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.9022022304797883`*^9, 3.902202245061656*^9}, {
  3.902311836262644*^9, 3.9023118381851206`*^9}},
 CellLabel->
  "In[241]:=",ExpressionUUID->"fe0f2c39-ce52-48d1-a83a-986527464223"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"Graf1", ",", " ", "Graf2", ",", " ", 
   RowBox[{"PlotRange", "->", "Automatic"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9022151541295643`*^9, 3.9022151599425907`*^9}},
 CellLabel->
  "In[242]:=",ExpressionUUID->"79401dd0-a43a-4e34-9f09-cd513992fba4"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[
           NCache[
            Rational[7, 360], 0.019444444444444445`]], 
          AbsoluteThickness[1.6], 
          RGBColor[0.5, 0, 0.5]], 
         LineBox[{{1900., 13.}, {1909.9999999999998`, 18.}, {1920., 10.}, {
          1930., 7.}, {1940., 8.}, {1950., 32.}, {1960., 20.}, {1970., 45.}, {
          1980., 65.}, {1990., 99.}}]}}}, {{}, {}}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[
           NCache[
            Rational[7, 360], 0.019444444444444445`]], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0.5, 0.5]], 
         LineBox[{{1900., 13.}, {1909.9999999999998`, 10.}, {1920., 5.}, {
          1930., 7.}, {1940., 10.}, {1950., 14.}, {1960., 41.}, {1970., 
          42.}, {1980., 68.}, {1990., 124.}}]}}}, {{}, {}}}}, {
    PlotRange -> Automatic, DisplayFunction -> Identity, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {
       FormBox["\"Leto\"", TraditionalForm], None}, AxesOrigin -> {1900., 0.},
      DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, PlotRange -> {{1900., 1990.}, {0., 99.}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"\[SHacek]tevilo streljanj\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["7", "360"], "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 0, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.33333333333333337`, 0., 0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.5`", ",", "0", ",", "0.5`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 0, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.5, 0, 0.5], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"\[SHacek]tevilo smrtnih \[ZHacek]rtev\""}, 
          "LineLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0.5]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["7", "360"], "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6666666666666666, 0.33333333333333337`, 
                    0.33333333333333337`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.5`", ",", "0.5`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0.5], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.9022016547054763`*^9, 3.902201759024204*^9, 3.9022022566214714`*^9, {
   3.9022151614079456`*^9, 3.9022151738170033`*^9}, 3.9023118425215826`*^9},
 CellLabel->
  "Out[242]=",ExpressionUUID->"a558fd9b-dde7-4c55-a993-5e06cba6af16"]
}, Open  ]],

Cell["Strelski pohodi po letu 2000", "Section",
 CellChangeTimes->{{3.901714894442967*^9, 
  3.901714900483981*^9}},ExpressionUUID->"98c0bb99-248e-4ab8-9ab5-\
aa0f9c1dfb69"]
}, Open  ]],

Cell[CellGroupData[{

Cell["21. stoletje", "Subtitle",
 CellChangeTimes->{{3.902204235544156*^9, 
  3.902204237543527*^9}},ExpressionUUID->"f4d40c44-78c5-45d9-9a0b-\
ebaf85307408"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"podatki3", " ", "=", " ", 
  RowBox[{"Import", "[", 
   RowBox[{
   "\"\<C:\\\\Users\\\\Teja\\\\Desktop\\\\streljanja v 21. stoletju.xlsx\>\"",
     ",", " ", "\"\<Dataset\>\""}], "]"}]}]], "Input",
 CellChangeTimes->{{3.9020694957410097`*^9, 3.9020695020871267`*^9}, {
  3.902069571347435*^9, 3.902069605577799*^9}, {3.902069651646629*^9, 
  3.902069652634886*^9}},
 CellLabel->
  "In[243]:=",ExpressionUUID->"3651266f-3ded-4015-9159-109fd3ac0ef4"],

Cell[BoxData[
 RowBox[{"{", 
  TagBox[
   TagBox[
    DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
     Association[
     "InitialData" -> {{
        "desetletje", "\[SHacek]tevilo streljanj", 
         "\[SHacek]tevilo smrtnih \[ZHacek]rtev"}, {2000., 80., 110.}, {2010.,
         261., 207.}, {2020., 146., 102.}}, "AllowEmbedding" -> True, 
      "InitialShape" -> TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`MatrixShape[4, 3], 4, 3, {All}], 
      "InitialType" -> TypeSystem`Vector[
        TypeSystem`Vector[TypeSystem`AnyType, 3], 4], "Meta" -> Association[],
       "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
      TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`MatrixShape[4, 3], 4, 3, {All}], "Type" -> 
      TypeSystem`Vector[
        TypeSystem`Vector[TypeSystem`AnyType, 3], 4], "Path" -> {}, 
      "DisplayedRowCount" -> 4, "DisplayedColumnCount" -> 3, "DataRowCount" -> 
      4, "DataColumnCount" -> 3, "SortPaths" -> {}, "SortDirections" -> {}, 
      "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
     TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
     TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
     TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
     TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
     TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
     DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
         Style[
          Grid[{{
             Item[
              Pane[
               Annotation["desetletje", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 1}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{112.00000000000001`, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation["\[SHacek]tevilo streljanj", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 2}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{190.4, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation["\[SHacek]tevilo smrtnih \[ZHacek]rtev", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 3}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{235.20000000000002`, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}]}, {
             Item[
              Pane[
               Annotation[
                RawBoxes["2000.0"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 1}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["80.0"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 2}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["110.0"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 3}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}]}, {
             Item[
              Pane[
               Annotation[
                RawBoxes["2010.0"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 1}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["261.0"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 2}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["207.0"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 3}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}]}, {
             Item[
              Pane[
               Annotation[
                RawBoxes["2020.0"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 1}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["146.0"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 2}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["102.0"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 3}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}]}}, 
           BaseStyle -> {
            ContextMenu -> 
             Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
               Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                 TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger,
                  TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True,
                  TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                  TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                 TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                  Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
             "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
           Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
           Spacings -> {0, 0}, Alignment -> Left, 
           BaseStyle -> {
            FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
             Plain}], LineBreakWithin -> False, ContextMenu -> {}, 
          NumberMarks -> False, ShowAutoStyles -> False]], 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
      Dynamic[
       TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
       TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
          Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
          
          Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
            TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
            TypeSystem`NestedGrid`PackagePrivate`datasetData[
             TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
           TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
              FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
              TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
              TypeSystem`NestedGrid`PackagePrivate`renderGrid[
              TypeSystem`NestedGrid`PackagePrivate`$state$$, 
               TypeSystem`NestedGrid`PackagePrivate`$path$$, 
               TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
               TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
               TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
               TypeSystem`NestedGrid`PackagePrivate`localHold[
               TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
              TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
             Not[
              FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
        TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
          FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
          TypeSystem`SparseGrid[
           TypeSystem`H["(data no longer present)"]], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
         TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
      DynamicModuleValues :> {}], 
     TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
       TypeSystem`PackageScope`SubViewPathbar[
       TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`updateState[
        TypeSystem`NestedGrid`PackagePrivate`$state$$, 
         TypeSystem`NestedGrid`PackagePrivate`$path$$, 
         TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
         TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
         TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
         TypeSystem`NestedGrid`PackagePrivate`localHold[
         TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
      TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
     TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
      Framed[
       Dynamic[
        Replace[
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
         TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
            TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
            Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
            TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
            Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
             Blank[]], 
            Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
             Blank[]], 
            Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
             Blank[]]] :> (
           Increment[
            TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
           TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
            TypeSystem`NestedGrid`PackagePrivate`path$; 
           TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
            TypeSystem`NestedGrid`PackagePrivate`pathType$; 
           TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
            TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
           TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
            TypeSystem`NestedGrid`PackagePrivate`localHold[
             TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
           TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
            TypeSystem`NestedGrid`PackagePrivate`path$, 
             TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
          Spacer[10], Blank[] :> Spacer[10]}], 
        TrackedSymbols :> {
         TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
       None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
       ImageSize -> {Automatic, 15}], FontSize -> 1], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
     DynamicWrapperBox[
      DynamicBox[ToBoxes[
        Dataset`DatasetContent[
        2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
         "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
         "State" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
         "VPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
         Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
         Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
         Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
         Hold[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
       ImageSizeCache->{565., {59.63403328722343, 65.36596671277657}},
       TrackedSymbols:>{
        TypeSystem`NestedGrid`PackagePrivate`$state$$, 
         TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
      TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
      MouseAnnotation[],
      ImageSizeCache->{565., {59.63403328722343, 65.36596671277657}}],
     BaseStyle->{LineBreakWithin -> False},
     DynamicModuleValues:>{},
     Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
      CreateUUID[]),
     UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
    Deploy,
    DefaultBaseStyle->"Deploy"],
   Dataset`InterpretDataset[1],
   Editable->False,
   SelectWithContents->True,
   Selectable->False], "}"}]], "Output",
 CellChangeTimes->{3.9020697647902007`*^9, 3.902311846515238*^9},
 CellLabel->
  "Out[243]=",ExpressionUUID->"809675f7-a1a5-4aab-9216-889abe0a76f5"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Vrednosti31", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"podatki3", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "i", "]"}], "]"}], "[", 
      RowBox[{"[", "2", "]"}], "]"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"i", ",", " ", "2", ",", " ", 
       RowBox[{"Length", "[", 
        RowBox[{"podatki3", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.902202359162155*^9, 3.902202444088361*^9}},
 CellLabel->
  "In[244]:=",ExpressionUUID->"09afaf33-ad7d-445c-b2e6-30335e32a670"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Vrednosti32", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"podatki3", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "i", "]"}], "]"}], "[", 
      RowBox[{"[", "3", "]"}], "]"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"i", ",", " ", "2", ",", " ", 
       RowBox[{"Length", "[", 
        RowBox[{"podatki3", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.902202422380808*^9, 3.9022024520150466`*^9}},
 CellLabel->
  "In[245]:=",ExpressionUUID->"ed1f5475-9ea8-4669-924a-a354627cdee5"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Graf1", " ", "=", " ", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{"Vrednosti31", ",", " ", 
     RowBox[{"DataRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"2000", ",", " ", "2020"}], "}"}]}], ",", 
     RowBox[{"PlotStyle", " ", "->", " ", "Purple"}], ",", "  ", 
     RowBox[{"PlotLegends", " ", "->", " ", 
      RowBox[{"{", "\"\<\[SHacek]tevilo streljanj\>\"", "}"}]}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", "\"\<Leto\>\"", "}"}]}], ",", " ", 
     RowBox[{"Joined", "\[Rule]", "True"}], ",", 
     RowBox[{"AxesOrigin", " ", "->", " ", 
      RowBox[{"{", 
       RowBox[{"2000", ",", " ", "0"}], "}"}]}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.9022024717679715`*^9, 3.9022025081209617`*^9}, {
  3.902311853822834*^9, 3.9023118566707225`*^9}},
 CellLabel->
  "In[246]:=",ExpressionUUID->"b7fc7877-b13b-4e9e-94f8-3c4910a449fe"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Graf2", " ", "=", " ", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{"Vrednosti32", ",", " ", 
     RowBox[{"DataRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"2000", ",", " ", "2020"}], "}"}]}], ",", 
     RowBox[{"PlotStyle", " ", "->", " ", "Pink"}], ",", " ", 
     RowBox[{"PlotLegends", " ", "->", " ", 
      RowBox[{"{", "\"\<\[SHacek]tevilo smrtnih \[ZHacek]rtev\>\"", "}"}]}], 
     ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", "\"\<Leto\>\"", "}"}]}], ",", " ", 
     RowBox[{"Joined", "\[Rule]", "True"}], ",", 
     RowBox[{"AxesOrigin", " ", "->", " ", 
      RowBox[{"{", 
       RowBox[{"2000", ",", " ", "0"}], "}"}]}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.9022025116944275`*^9, 3.9022025344875803`*^9}, {
  3.902311865116916*^9, 3.9023118656819353`*^9}},
 CellLabel->
  "In[247]:=",ExpressionUUID->"c0024ea4-d0cc-43c7-9049-b6041fcb2573"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"Graf1", ",", " ", "Graf2", ",", 
   RowBox[{"PlotRange", "->", "Automatic"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.902202537955288*^9, 3.9022025461933575`*^9}, {
  3.902215211542859*^9, 3.9022152207794685`*^9}},
 CellLabel->
  "In[248]:=",ExpressionUUID->"1527386c-109d-4934-ac48-e7e83d34243e"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[
           NCache[
            Rational[7, 360], 0.019444444444444445`]], 
          AbsoluteThickness[1.6], 
          RGBColor[0.5, 0, 0.5]], 
         LineBox[{{2000., 80.}, {2010., 261.}, {2020., 
          146.}}]}}}, {{}, {}}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[
           NCache[
            Rational[7, 360], 0.019444444444444445`]], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0.5, 0.5]], 
         LineBox[{{2000., 110.}, {2010., 207.}, {2020., 
          102.}}]}}}, {{}, {}}}}, {
    PlotRange -> Automatic, DisplayFunction -> Identity, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {
       FormBox["\"Leto\"", TraditionalForm], None}, AxesOrigin -> {2000., 0.},
      DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, PlotRange -> {{2000., 2020.}, {0., 261.}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"\[SHacek]tevilo streljanj\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["7", "360"], "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 0, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.33333333333333337`, 0., 0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.5`", ",", "0", ",", "0.5`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 0, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.5, 0, 0.5], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"\[SHacek]tevilo smrtnih \[ZHacek]rtev\""}, 
          "LineLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0.5]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["7", "360"], "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6666666666666666, 0.33333333333333337`, 
                    0.33333333333333337`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.5`", ",", "0.5`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0.5], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.902202547726755*^9, 3.902215227832467*^9, 
  3.9023118697191544`*^9},
 CellLabel->
  "Out[248]=",ExpressionUUID->"a1cb966c-550d-45bc-9a66-9200a64461d8"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Strelski pohodi v letu 2023", "Section",
 CellChangeTimes->{{3.9017149345907536`*^9, 
  3.9017149410834537`*^9}},ExpressionUUID->"74fda6f0-5ddb-4a1f-b0a3-\
a1284c616bcf"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"podatki4", " ", "=", " ", 
  RowBox[{"Import", "[", 
   RowBox[{
   "\"\<C:\\\\Users\\\\Teja\\\\Desktop\\\\streljanja 2023.xlsx\>\"", ",", 
    " ", "\"\<Dataset\>\""}], "]"}]}]], "Input",
 CellChangeTimes->{{3.90221367180656*^9, 3.9022136744281054`*^9}, {
  3.902214180649515*^9, 3.902214218225052*^9}},
 CellLabel->
  "In[249]:=",ExpressionUUID->"86f434ff-0b28-4769-90be-02d89ef789ce"],

Cell[BoxData[
 RowBox[{"{", 
  TagBox[
   TagBox[
    DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
     Association[
     "InitialData" -> {{
        "mesec", "\[SHacek]tevilo streljanj", 
         "\[SHacek]tevilo smrtnih \[ZHacek]rtev"}, {"januar", 6., 3.}, {
        "februar", 5., 4.}, {"marec", 8., 9.}, {"april", 6., 2.}, {
        "maj", 4., 2.}, {"junij", 2., 2.}, {"julij", 2., 2.}, {
        "avgust", 5., 3.}}, "AllowEmbedding" -> True, "InitialShape" -> 
      TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[{
            TypeSystem`PackageScope`AtomShape[67.2], 
            TypeSystem`PackageScope`UnknownShape[False], 
            TypeSystem`PackageScope`UnknownShape[False]}], 
          DirectedInfinity[1], 3, {All}]], 9, 
        DirectedInfinity[1], {}], "InitialType" -> TypeSystem`Vector[
        TypeSystem`Tuple[{
          TypeSystem`Atom[String], TypeSystem`AnyType, TypeSystem`AnyType}], 
        9], "Meta" -> Association[], "RowTarget" -> 20, "ColumnTarget" -> 10, 
      "Shape" -> TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[{
            TypeSystem`PackageScope`AtomShape[67.2], 
            TypeSystem`PackageScope`UnknownShape[False], 
            TypeSystem`PackageScope`UnknownShape[False]}], 
          DirectedInfinity[1], 3, {All}]], 9, 
        DirectedInfinity[1], {}], "Type" -> TypeSystem`Vector[
        TypeSystem`Tuple[{
          TypeSystem`Atom[String], TypeSystem`AnyType, TypeSystem`AnyType}], 
        9], "Path" -> {}, "DisplayedRowCount" -> 9, "DisplayedColumnCount" -> 
      3, "DataRowCount" -> 9, "DataColumnCount" -> 3, "SortPaths" -> {}, 
      "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
     TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
     TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
     TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
     TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
     TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
     DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
         Style[
          Grid[{{
             Item[
              Pane[
               Annotation["mesec", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 1}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{67.2, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation["\[SHacek]tevilo streljanj", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 2}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{190.4, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation["\[SHacek]tevilo smrtnih \[ZHacek]rtev", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 3}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{235.20000000000002`, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}]}, {
             Item[
              Pane[
               Annotation["januar", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 1}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{67.2, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["6.0"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 2}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["3.0"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 3}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}]}, {
             Item[
              Pane[
               Annotation["februar", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 1}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{67.2, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["5.0"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 2}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["4.0"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 3}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}]}, {
             Item[
              Pane[
               Annotation["marec", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 1}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{67.2, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["8.0"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 2}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["9.0"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 3}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}]}, {
             Item[
              Pane[
               Annotation["april", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 1}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{67.2, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["6.0"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 2}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["2.0"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 3}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}]}, {
             Item[
              Pane[
               Annotation["maj", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 1}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{67.2, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["4.0"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 2}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["2.0"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 3}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}]}, {
             Item[
              Pane[
               Annotation["junij", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 1}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{67.2, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["2.0"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 2}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["2.0"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 3}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}]}, {
             Item[
              Pane[
               Annotation["julij", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 1}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{67.2, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["2.0"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 2}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["2.0"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 3}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}]}, {
             Item[
              Pane[
               Annotation["avgust", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 1}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{67.2, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["5.0"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 2}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["3.0"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 3}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}]}}, 
           BaseStyle -> {
            ContextMenu -> 
             Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
               Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                 TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger,
                  TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True,
                  TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                  TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                 TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                  Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
             "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
           Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
           Spacings -> {0, 0}, Alignment -> Left, 
           BaseStyle -> {
            FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
             Plain}], LineBreakWithin -> False, ContextMenu -> {}, 
          NumberMarks -> False, ShowAutoStyles -> False]], 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
      Dynamic[
       TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
       TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
          Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
          
          Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
            TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
            TypeSystem`NestedGrid`PackagePrivate`datasetData[
             TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
           TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
              FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
              TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
              TypeSystem`NestedGrid`PackagePrivate`renderGrid[
              TypeSystem`NestedGrid`PackagePrivate`$state$$, 
               TypeSystem`NestedGrid`PackagePrivate`$path$$, 
               TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
               TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
               TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
               TypeSystem`NestedGrid`PackagePrivate`localHold[
               TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
              TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
             Not[
              FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
        TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
          FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
          TypeSystem`SparseGrid[
           TypeSystem`H["(data no longer present)"]], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
         TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
      DynamicModuleValues :> {}], 
     TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
       TypeSystem`PackageScope`SubViewPathbar[
       TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`updateState[
        TypeSystem`NestedGrid`PackagePrivate`$state$$, 
         TypeSystem`NestedGrid`PackagePrivate`$path$$, 
         TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
         TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
         TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
         TypeSystem`NestedGrid`PackagePrivate`localHold[
         TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
      TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
     TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
      Framed[
       Dynamic[
        Replace[
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
         TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
            TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
            Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
            TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
            Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
             Blank[]], 
            Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
             Blank[]], 
            Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
             Blank[]]] :> (
           Increment[
            TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
           TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
            TypeSystem`NestedGrid`PackagePrivate`path$; 
           TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
            TypeSystem`NestedGrid`PackagePrivate`pathType$; 
           TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
            TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
           TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
            TypeSystem`NestedGrid`PackagePrivate`localHold[
             TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
           TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
            TypeSystem`NestedGrid`PackagePrivate`path$, 
             TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
          Spacer[10], Blank[] :> Spacer[10]}], 
        TrackedSymbols :> {
         TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
       None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
       ImageSize -> {Automatic, 15}], FontSize -> 1], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
     DynamicWrapperBox[
      DynamicBox[ToBoxes[
        Dataset`DatasetContent[
        2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
         "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
         "State" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
         "VPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
         Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
         Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
         Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
         Hold[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
       ImageSizeCache->{520., {127.13403328722342`, 132.86596671277658`}},
       TrackedSymbols:>{
        TypeSystem`NestedGrid`PackagePrivate`$state$$, 
         TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
      TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
      MouseAnnotation[],
      ImageSizeCache->{520., {127.13403328722342`, 132.86596671277658`}}],
     BaseStyle->{LineBreakWithin -> False},
     DynamicModuleValues:>{},
     Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
      CreateUUID[]),
     UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
    Deploy,
    DefaultBaseStyle->"Deploy"],
   Dataset`InterpretDataset[1],
   Editable->False,
   SelectWithContents->True,
   Selectable->False], "}"}]], "Output",
 CellChangeTimes->{3.902214220287844*^9, 3.902311874593552*^9},
 CellLabel->
  "Out[249]=",ExpressionUUID->"f88ebf6d-3957-488b-9a76-b1d3ee61b455"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Vrednosti41", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"podatki4", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "i", "]"}], "]"}], "[", 
      RowBox[{"[", "2", "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "2", ",", 
       RowBox[{"Length", "[", 
        RowBox[{"podatki4", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.902214271175635*^9, 3.902214385735228*^9}, 
   3.902304088437557*^9},
 CellLabel->
  "In[250]:=",ExpressionUUID->"f5712595-790d-4385-a49c-26d778c9c017"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Vrednosti42", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"podatki4", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "i", "]"}], "]"}], "[", 
      RowBox[{"[", "3", "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "2", ",", 
       RowBox[{"Length", "[", 
        RowBox[{"podatki4", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.9022143912615786`*^9, 3.90221440768289*^9}},
 CellLabel->
  "In[251]:=",ExpressionUUID->"073ab330-de85-4a4b-bcb2-552a52bba2f4"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Graf1", " ", "=", " ", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{"Vrednosti41", ",", " ", 
     RowBox[{"DataRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"1", ",", " ", "8"}], "}"}]}], ",", 
     RowBox[{"PlotStyle", " ", "->", " ", "Purple"}], ",", "  ", 
     RowBox[{"PlotLegends", " ", "->", " ", 
      RowBox[{"{", "\"\<\[SHacek]tevilo streljanj\>\"", "}"}]}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", "\"\<Mesec\>\"", "}"}]}], ",", " ", 
     RowBox[{"Joined", "\[Rule]", "True"}], ",", 
     RowBox[{"AxesOrigin", " ", "->", " ", 
      RowBox[{"{", 
       RowBox[{"1", ",", " ", "0"}], "}"}]}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.9022144259430647`*^9, 3.902214505775264*^9}, {
  3.9022147172366605`*^9, 3.9022147917600403`*^9}, {3.9022148289034166`*^9, 
  3.9022149151153927`*^9}, {3.902214951258607*^9, 3.902214977453884*^9}, {
  3.9022150668942547`*^9, 3.9022150780113773`*^9}, {3.90221512885614*^9, 
  3.9022151305448647`*^9}, {3.9022152387198763`*^9, 3.902215238925763*^9}, {
  3.902311880433949*^9, 3.902311882192704*^9}},
 CellLabel->
  "In[252]:=",ExpressionUUID->"879c3471-b738-4620-91e3-97d150e6300d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Graf2", " ", "=", " ", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{"Vrednosti42", ",", " ", 
     RowBox[{"DataRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"1", ",", " ", "8"}], "}"}]}], ",", 
     RowBox[{"PlotStyle", " ", "->", " ", "Pink"}], ",", "  ", 
     RowBox[{"PlotLegends", " ", "->", " ", 
      RowBox[{"{", "\"\<\[SHacek]tevilo smrtnih \[ZHacek]rtev\>\"", "}"}]}], 
     ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", "\"\<Mesec\>\"", "}"}]}], ",", " ", 
     RowBox[{"Joined", "\[Rule]", "True"}], ",", 
     RowBox[{"AxesOrigin", " ", "->", " ", 
      RowBox[{"{", 
       RowBox[{"1", ",", " ", "0"}], "}"}]}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.902214515152754*^9, 3.902214547249097*^9}, {
   3.9022145978983545`*^9, 3.902214598599818*^9}, {3.9022146935060034`*^9, 
   3.902214795957156*^9}, {3.902214834799341*^9, 3.902214849623167*^9}, {
   3.9022148943205137`*^9, 3.9022148954442186`*^9}, {3.9022149571880946`*^9, 
   3.9022149687312546`*^9}, {3.9022150890800276`*^9, 3.9022150914804935`*^9}, 
   3.902215125640049*^9, 3.902215245039432*^9, {3.902311886533568*^9, 
   3.902311889042962*^9}},
 CellLabel->
  "In[253]:=",ExpressionUUID->"8fdabb93-155c-490f-ba39-a1ffb7dc3ae4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"Graf1", ",", " ", "Graf2", ",", " ", 
   RowBox[{"PlotRange", "->", "Automatic"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.902214561367462*^9, 3.9022145680194244`*^9}, {
  3.902215108291692*^9, 3.902215116570815*^9}},
 CellLabel->
  "In[254]:=",ExpressionUUID->"392c89b2-6b82-4d57-a0bc-f954acc4c7a1"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[
           NCache[
            Rational[7, 360], 0.019444444444444445`]], 
          AbsoluteThickness[1.6], 
          RGBColor[0.5, 0, 0.5]], 
         LineBox[{{1., 6.}, {2., 5.}, {3., 8.}, {4., 6.}, {5., 4.}, {
          5.999999999999999, 2.}, {7., 2.}, {8., 
          5.}}]}}}, {{}, {}}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[
           NCache[
            Rational[7, 360], 0.019444444444444445`]], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0.5, 0.5]], 
         LineBox[{{1., 3.}, {2., 4.}, {3., 9.}, {4., 2.}, {5., 2.}, {
          5.999999999999999, 2.}, {7., 2.}, {8., 3.}}]}}}, {{}, {}}}}, {
    PlotRange -> Automatic, DisplayFunction -> Identity, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {
       FormBox["\"Mesec\"", TraditionalForm], None}, AxesOrigin -> {1., 0.}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, PlotRange -> {{0, 8.}, {0., 8.}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"\[SHacek]tevilo streljanj\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["7", "360"], "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 0, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.33333333333333337`, 0., 0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.5`", ",", "0", ",", "0.5`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 0, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.5, 0, 0.5], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"\[SHacek]tevilo smrtnih \[ZHacek]rtev\""}, 
          "LineLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0.5]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["7", "360"], "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6666666666666666, 0.33333333333333337`, 
                    0.33333333333333337`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.5`", ",", "0.5`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0.5], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.9022145694184914`*^9, 3.9022146043550663`*^9, {3.9022146374723663`*^9, 
   3.902214662401001*^9}, {3.9022146979626207`*^9, 3.9022147276846743`*^9}, {
   3.9022147666228466`*^9, 3.902214800354472*^9}, 3.9022148406621633`*^9, 
   3.9022148985923157`*^9, {3.9022149635005245`*^9, 3.902214984670452*^9}, {
   3.9022150974153194`*^9, 3.902215117985612*^9}, 3.9022152495520506`*^9, 
   3.9023118940396695`*^9},
 CellLabel->
  "Out[254]=",ExpressionUUID->"6043787b-83b6-4369-8bac-491666ac827e"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Strelski pohodi od 1840 do 2020", "Section",
 CellChangeTimes->{{3.902216867134376*^9, 
  3.9022169263387504`*^9}},ExpressionUUID->"dfb1d16d-e230-4d30-8cd6-\
2c06068d0157"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"podatki5", " ", "=", " ", 
  RowBox[{"Import", "[", 
   RowBox[{
   "\"\<C:\\\\Users\\\\Teja\\\\Desktop\\\\streljanja.xlsx\>\"", ",", " ", 
    "\"\<Dataset\>\""}], "]"}]}]], "Input",
 CellChangeTimes->{
  3.9022163848463387`*^9, {3.9022164683926163`*^9, 3.9022164687426996`*^9}},
 CellLabel->
  "In[215]:=",ExpressionUUID->"621bbb00-afec-4754-9051-09eaed32849e"],

Cell[BoxData[
 RowBox[{"{", 
  TagBox[
   TagBox[
    DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
     Association[
     "InitialData" -> {{
        "desetletje", "\[SHacek]tevilo streljanj", 
         "\[SHacek]tevilo smrtnih \[ZHacek]rtev"}, {1840., 1., 1.}, {1850., 
        3., 4.}, {1860., 5., 5.}, {1870., 7., 3.}, {1880., 10., 2.}, {1890., 
        6., 11.}, {1900., 13., 13.}, {1910., 18., 10.}, {1920., 10., 5.}, {
        1930., 7., 7.}, {1940., 8., 10.}, {1950., 32., 14.}, {1960., 20., 
        41.}, {1970., 45., 42.}, {1980., 65., 68.}, {1990., 99., 124.}, {
        2000., 80., 110.}, {2010., 261., 207.}, {2020., 146., 102.}}, 
      "AllowEmbedding" -> True, "InitialShape" -> 
      TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`MatrixShape[20, 3], 20, 3, {All}], 
      "InitialType" -> TypeSystem`Vector[
        TypeSystem`Vector[TypeSystem`AnyType, 3], 20], "Meta" -> 
      Association[], "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
      TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`MatrixShape[20, 3], 20, 3, {All}], "Type" -> 
      TypeSystem`Vector[
        TypeSystem`Vector[TypeSystem`AnyType, 3], 20], "Path" -> {}, 
      "DisplayedRowCount" -> 20, "DisplayedColumnCount" -> 3, "DataRowCount" -> 
      20, "DataColumnCount" -> 3, "SortPaths" -> {}, "SortDirections" -> {}, 
      "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
     TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
     TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
     TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
     TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
     TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
     DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
         Style[
          Grid[{{
             Item[
              Pane[
               Annotation["desetletje", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 1}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{112.00000000000001`, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation["\[SHacek]tevilo streljanj", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 2}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{190.4, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation["\[SHacek]tevilo smrtnih \[ZHacek]rtev", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 3}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{235.20000000000002`, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}]}, {
             Item[
              Pane[
               Annotation[
                RawBoxes["1840.0"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 1}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["1.0"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 2}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["1.0"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 3}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}]}, {
             Item[
              Pane[
               Annotation[
                RawBoxes["1850.0"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 1}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["3.0"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 2}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["4.0"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 3}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}]}, {
             Item[
              Pane[
               Annotation[
                RawBoxes["1860.0"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 1}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["5.0"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 2}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["5.0"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 3}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}]}, {
             Item[
              Pane[
               Annotation[
                RawBoxes["1870.0"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 1}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["7.0"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 2}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["3.0"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 3}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}]}, {
             Item[
              Pane[
               Annotation[
                RawBoxes["1880.0"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 1}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["10.0"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 2}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["2.0"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 3}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}]}, {
             Item[
              Pane[
               Annotation[
                RawBoxes["1890.0"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 1}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["6.0"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 2}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["11.0"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 3}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}]}, {
             Item[
              Pane[
               Annotation[
                RawBoxes["1900.0"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 1}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["13.0"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 2}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["13.0"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 3}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}]}, {
             Item[
              Pane[
               Annotation[
                RawBoxes["1910.0"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 1}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["18.0"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 2}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["10.0"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 3}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}]}, {
             Item[
              Pane[
               Annotation[
                RawBoxes["1920.0"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 1}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["10.0"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 2}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["5.0"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 3}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}]}, {
             Item[
              Pane[
               Annotation[
                RawBoxes["1930.0"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 1}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["7.0"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 2}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["7.0"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 3}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}]}, {
             Item[
              Pane[
               Annotation[
                RawBoxes["1940.0"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 1}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["8.0"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 2}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["10.0"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 3}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}]}, {
             Item[
              Pane[
               Annotation[
                RawBoxes["1950.0"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 1}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["32.0"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 2}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["14.0"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 3}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}]}, {
             Item[
              Pane[
               Annotation[
                RawBoxes["1960.0"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 1}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["20.0"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 2}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["41.0"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 3}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}]}, {
             Item[
              Pane[
               Annotation[
                RawBoxes["1970.0"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 1}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["45.0"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 2}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["42.0"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 3}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}]}, {
             Item[
              Pane[
               Annotation[
                RawBoxes["1980.0"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 1}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["65.0"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 2}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["68.0"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 3}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}]}, {
             Item[
              Pane[
               Annotation[
                RawBoxes["1990.0"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 1}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["99.0"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 2}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["124.0"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 3}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}]}, {
             Item[
              Pane[
               Annotation[
                RawBoxes["2000.0"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 1}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["80.0"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 2}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["110.0"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 3}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}]}, {
             Item[
              Pane[
               Annotation[
                RawBoxes["2010.0"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 1}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["261.0"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 2}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["207.0"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 3}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}]}, {
             Item[
              Pane[
               Annotation[
                RawBoxes["2020.0"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 1}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["146.0"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 2}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["102.0"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 3}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}]}}, 
           BaseStyle -> {
            ContextMenu -> 
             Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
               Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                 TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger,
                  TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True,
                  TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                  TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                 TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                  Block[{
                    TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = {
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
             "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
           Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
           Spacings -> {0, 0}, Alignment -> Left, 
           BaseStyle -> {
            FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
             Plain}], LineBreakWithin -> False, ContextMenu -> {}, 
          NumberMarks -> False, ShowAutoStyles -> False]], 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
      Dynamic[
       TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
       TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
          Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
          
          Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
            TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
            TypeSystem`NestedGrid`PackagePrivate`datasetData[
             TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
           TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
              FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
              TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
              TypeSystem`NestedGrid`PackagePrivate`renderGrid[
              TypeSystem`NestedGrid`PackagePrivate`$state$$, 
               TypeSystem`NestedGrid`PackagePrivate`$path$$, 
               TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
               TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
               TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
               TypeSystem`NestedGrid`PackagePrivate`localHold[
               TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
              TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
             Not[
              FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
        TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
          FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
          TypeSystem`SparseGrid[
           TypeSystem`H["(data no longer present)"]], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
         TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
      DynamicModuleValues :> {}], 
     TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
       TypeSystem`PackageScope`SubViewPathbar[
       TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`updateState[
        TypeSystem`NestedGrid`PackagePrivate`$state$$, 
         TypeSystem`NestedGrid`PackagePrivate`$path$$, 
         TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
         TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
         TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
         TypeSystem`NestedGrid`PackagePrivate`localHold[
         TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
      TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
     TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
      Framed[
       Dynamic[
        Replace[
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
         TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
            TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
            Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
            TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
            Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
             Blank[]], 
            Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
             Blank[]], 
            Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
             Blank[]]] :> (
           Increment[
            TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
           TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
            TypeSystem`NestedGrid`PackagePrivate`path$; 
           TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
            TypeSystem`NestedGrid`PackagePrivate`pathType$; 
           TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
            TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
           TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
            TypeSystem`NestedGrid`PackagePrivate`localHold[
             TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
           TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
            TypeSystem`NestedGrid`PackagePrivate`path$, 
             TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
          Spacer[10], Blank[] :> Spacer[10]}], 
        TrackedSymbols :> {
         TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
       None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
       ImageSize -> {Automatic, 15}], FontSize -> 1], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
     DynamicWrapperBox[
      DynamicBox[ToBoxes[
        Dataset`DatasetContent[
        2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
         "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
         "State" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
         "VPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
         Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
         Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
         Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
         Hold[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
       ImageSizeCache->{565., {275.6340332872234, 281.3659667127766}},
       TrackedSymbols:>{
        TypeSystem`NestedGrid`PackagePrivate`$state$$, 
         TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
      TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
      MouseAnnotation[],
      ImageSizeCache->{565., {275.6340332872234, 281.3659667127766}}],
     BaseStyle->{LineBreakWithin -> False},
     DynamicModuleValues:>{},
     Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
      CreateUUID[]),
     UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
    Deploy,
    DefaultBaseStyle->"Deploy"],
   Dataset`InterpretDataset[1],
   Editable->False,
   SelectWithContents->True,
   Selectable->False], "}"}]], "Output",
 CellChangeTimes->{3.902216391524787*^9, 3.9022164727395954`*^9, 
  3.9022166281854563`*^9, 3.902216799945766*^9, 3.902311649339735*^9},
 CellLabel->
  "Out[215]=",ExpressionUUID->"8f1cd88b-f021-4a2c-b6e0-eeb4357c5236"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Vrednosti51", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"podatki5", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "i", "]"}], "]"}], "[", 
      RowBox[{"[", "2", "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "2", ",", 
       RowBox[{"Length", "[", 
        RowBox[{"podatki5", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.902216478653343*^9, 3.902216486847867*^9}},
 CellLabel->
  "In[216]:=",ExpressionUUID->"1531bb24-7104-4c0a-8aec-857c635022e0"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Vrednosti52", " ", "=", " ", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"podatki5", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "[", 
        RowBox[{"[", "i", "]"}], "]"}], "[", 
       RowBox[{"[", "3", "]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "2", ",", 
        RowBox[{"Length", "[", 
         RowBox[{"podatki5", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.902216505017972*^9, 3.902216515213397*^9}},
 CellLabel->
  "In[217]:=",ExpressionUUID->"775e1a9f-ff20-4870-b41f-992dbe6f349d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Graf1", " ", "=", " ", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{"Vrednosti51", ",", " ", 
     RowBox[{"DataRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"1840", ",", " ", "2020"}], "}"}]}], ",", 
     RowBox[{"PlotStyle", " ", "->", " ", "Purple"}], ",", "  ", 
     RowBox[{"PlotLegends", " ", "->", " ", 
      RowBox[{"{", "\"\<\[SHacek]tevilo streljanj\>\"", "}"}]}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", "\"\<Leto\>\"", "}"}]}], ",", " ", 
     RowBox[{"Joined", "\[Rule]", "True"}], ",", 
     RowBox[{"AxesOrigin", " ", "->", " ", 
      RowBox[{"{", 
       RowBox[{"1840", ",", " ", "0"}], "}"}]}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.9022165401311274`*^9, 3.902216564815013*^9}, {
  3.90221666313216*^9, 3.902216689441122*^9}, {3.9022167260461483`*^9, 
  3.9022167267048683`*^9}, {3.9023116139965706`*^9, 3.902311616962525*^9}, {
  3.902311659090349*^9, 3.9023116619675603`*^9}, {3.9023117455357*^9, 
  3.9023117654109373`*^9}},
 CellLabel->
  "In[226]:=",ExpressionUUID->"dd832270-4796-45e3-bba1-12262a81c7a2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Graf2", " ", "=", " ", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{"Vrednosti52", ",", " ", 
     RowBox[{"DataRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"1840", ",", "2020"}], "}"}]}], ",", 
     RowBox[{"PlotStyle", " ", "->", " ", "Pink"}], ",", " ", 
     RowBox[{"PlotLegends", " ", "->", " ", 
      RowBox[{"{", "\"\<\[SHacek]tevilo smrtnih \[ZHacek]rtev\>\"", "}"}]}], 
     ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", "\"\<Leto\>\"", "}"}]}], ",", " ", 
     RowBox[{"Joined", "\[Rule]", "True"}], ",", 
     RowBox[{"AxesOrigin", " ", "->", " ", 
      RowBox[{"{", 
       RowBox[{"1840", ",", " ", "0"}], "}"}]}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.9022166820832853`*^9, 3.902216731561967*^9}, {
  3.9023116723378897`*^9, 3.9023116806414385`*^9}, {3.9023117505264935`*^9, 
  3.902311784495653*^9}},
 CellLabel->
  "In[229]:=",ExpressionUUID->"d3c5470e-e10c-4411-af07-0f3218d6dda7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"Graf1", ",", " ", "Graf2", ",", " ", 
   RowBox[{"PlotRange", "->", "Automatic"}]}], "]"}]], "Input",
 CellLabel->
  "In[230]:=",ExpressionUUID->"b1459f6e-46c2-44f8-b888-b4ccae7acc1b"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[
           NCache[
            Rational[7, 360], 0.019444444444444445`]], 
          AbsoluteThickness[1.6], 
          RGBColor[0.5, 0, 0.5]], 
         LineBox[CompressedData["
1:eJxTTMoPSmViYGAQBmIQDQYH5jhAGB/swdQLGJ/D4T8I8M+F8kUgtAWMLwOh
E2B8FQjdAeNLQOgNML4WhL4B4xtB6Xmo+jVgfKj5ATC+AoSugPEdIPQCGN8E
Qp+A8hvcIPQHKN8hAEJLzIfQByKg4lA+QwiEzoDyAwog9AQo3yHJAQBjmiue

          "]]}}}, {{}, {}}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[
           NCache[
            Rational[7, 360], 0.019444444444444445`]], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0.5, 0.5]], 
         LineBox[CompressedData["
1:eJxTTMoPSmViYGAQBmIQDQYH5jhAGB/swdQLGF/A4T8I8M+F8kUgtAWMzwGh
E2B8BgjdAeOrQegNML4WhL4B46tA6Xmo5mvA+DIQOmAeqvoKGF8HQi+A8htc
IPQJmLwrhP4A4wdCaIn5UH48hHaA8huiIXQGlP8gE0JPgMlHOgAAH/YrrA==

          "]]}}}, {{}, {}}}}, {
    PlotRange -> Automatic, DisplayFunction -> Identity, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {
       FormBox["\"Leto\"", TraditionalForm], None}, AxesOrigin -> {1840., 0.},
      DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, PlotRange -> {{1840., 2020.}, {0., 261.}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"\[SHacek]tevilo streljanj\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["7", "360"], "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 0, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.33333333333333337`, 0., 0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.5`", ",", "0", ",", "0.5`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 0, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.5, 0, 0.5], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"\[SHacek]tevilo smrtnih \[ZHacek]rtev\""}, 
          "LineLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0.5]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["7", "360"], "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6666666666666666, 0.33333333333333337`, 
                    0.33333333333333337`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.5`", ",", "0.5`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0.5], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.9022167154791985`*^9, 3.9022167376470737`*^9}, 
   3.902216812155769*^9, {3.9023116687245765`*^9, 3.9023116848450823`*^9}, {
   3.902311756107728*^9, 3.90231178815117*^9}},
 CellLabel->
  "Out[230]=",ExpressionUUID->"e5bcd548-3189-4d9a-9994-d01195eaaeb4"]
}, Open  ]],

Cell["\<\
Vidimo, da sta tako \[SHacek]tevilo streljanj kot \[SHacek]tevilo smrtnih \
\[ZHacek]rtev iz desetletja v desetletje do leta 1950 po\[CHacek]asi nara\
\[SHacek]\[CHacek]ali, od leta 2000 pa se \[SHacek]tevilke drasti\[CHacek]no \
pove\[CHacek]ujejo. \
\>", "Text",
 CellChangeTimes->{{3.9023240613304696`*^9, 
  3.9023242639030743`*^9}},ExpressionUUID->"fb8921d6-bb6b-48e0-871c-\
b8590d9cb6c6"]
}, Open  ]],

Cell[CellGroupData[{

Cell["10 najsmrtonosnej\[SHacek]ih strelskih pohodov v zgodovini ZDA", \
"Section",
 CellChangeTimes->{{3.9017149470437593`*^9, 3.901714961273567*^9}, {
  3.9022867634369435`*^9, 
  3.902286776306158*^9}},ExpressionUUID->"5a17a84b-14c4-4db2-b06c-\
02f12d1a151d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"podatki6", " ", "=", " ", 
  RowBox[{"Import", "[", 
   RowBox[{
   "\"\<C:\\\\Users\\\\Teja\\\\Desktop\\\\10 najsmrtonosnejsih.xlsx\>\"", ",",
     " ", "\"\<Dataset\>\""}], "]"}]}]], "Input",
 CellChangeTimes->{{3.9022896446528587`*^9, 3.9022896907436438`*^9}, 
   3.902289859476426*^9, 3.902289938381503*^9, {3.90229131961292*^9, 
   3.9022913202238655`*^9}, {3.9023968115524387`*^9, 
   3.9023968131416206`*^9}, {3.9023969018056087`*^9, 3.9023969023935423`*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"9cd34f1c-8d81-4390-93d4-97d9d0e582f5"],

Cell[BoxData[
 RowBox[{"{", 
  TagBox[
   TagBox[
    DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
     Association[
     "InitialData" -> {{"datum", "\[SHacek]tevilo smrtnih \[ZHacek]rtev"}, {
        "16.04.2007", 33.}, {"14.12.2012", 28.}, {"24.05.2022", 22.}, {
        "1.08.1966", 18.}, {"14.02.2018", 17.}, {"20.04.1999", 15.}, {
        "26.07.1764", 11.}, {"18.05.2018", 10.}, {"1.10.2015", 10.}, {
        "21.03.2005", 10.}}, "AllowEmbedding" -> True, "InitialShape" -> 
      TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[{
            TypeSystem`PackageScope`AtomShape[112.00000000000001`], 
            TypeSystem`PackageScope`UnknownShape[False]}], 
          DirectedInfinity[1], 2, {All}]], 11, 
        DirectedInfinity[1], {}], "InitialType" -> TypeSystem`Vector[
        TypeSystem`Tuple[{
          TypeSystem`Atom[String], TypeSystem`AnyType}], 11], "Meta" -> 
      Association[], "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
      TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[{
            TypeSystem`PackageScope`AtomShape[112.00000000000001`], 
            TypeSystem`PackageScope`UnknownShape[False]}], 
          DirectedInfinity[1], 2, {All}]], 11, 
        DirectedInfinity[1], {}], "Type" -> TypeSystem`Vector[
        TypeSystem`Tuple[{
          TypeSystem`Atom[String], TypeSystem`AnyType}], 11], "Path" -> {}, 
      "DisplayedRowCount" -> 11, "DisplayedColumnCount" -> 2, "DataRowCount" -> 
      11, "DataColumnCount" -> 2, "SortPaths" -> {}, "SortDirections" -> {}, 
      "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
     TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
     TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
     TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
     TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
     TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
     DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
         Style[
          Grid[{{
             Item[
              Pane[
               Annotation["datum", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 1}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{112.00000000000001`, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation["\[SHacek]tevilo smrtnih \[ZHacek]rtev", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 2}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{235.20000000000002`, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}]}, {
             Item[
              Pane[
               Annotation["16.04.2007", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 1}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{112.00000000000001`, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["33.0"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 2}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}]}, {
             Item[
              Pane[
               Annotation["14.12.2012", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 1}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{112.00000000000001`, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["28.0"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 2}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}]}, {
             Item[
              Pane[
               Annotation["24.05.2022", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 1}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{112.00000000000001`, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["22.0"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 2}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}]}, {
             Item[
              Pane[
               Annotation["1.08.1966", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 1}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{112.00000000000001`, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["18.0"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 2}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}]}, {
             Item[
              Pane[
               Annotation["14.02.2018", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 1}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{112.00000000000001`, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["17.0"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 2}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}]}, {
             Item[
              Pane[
               Annotation["20.04.1999", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 1}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{112.00000000000001`, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["15.0"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 2}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}]}, {
             Item[
              Pane[
               Annotation["26.07.1764", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 1}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{112.00000000000001`, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["11.0"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 2}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}]}, {
             Item[
              Pane[
               Annotation["18.05.2018", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 1}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{112.00000000000001`, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["10.0"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 2}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}]}, {
             Item[
              Pane[
               Annotation["1.10.2015", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 1}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{112.00000000000001`, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["10.0"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 2}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}]}, {
             Item[
              Pane[
               Annotation["21.03.2005", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 1}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{112.00000000000001`, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["10.0"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 2}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}]}}, 
           BaseStyle -> {
            ContextMenu -> 
             Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
               Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                 TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger,
                  TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True,
                  TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                  TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                 TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                  Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
             "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
           Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
           Spacings -> {0, 0}, Alignment -> Left, 
           BaseStyle -> {
            FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
             Plain}], LineBreakWithin -> False, ContextMenu -> {}, 
          NumberMarks -> False, ShowAutoStyles -> False]], 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
      Dynamic[
       TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
       TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
          Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
          
          Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
            TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
            TypeSystem`NestedGrid`PackagePrivate`datasetData[
             TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
           TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
              FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
              TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
              TypeSystem`NestedGrid`PackagePrivate`renderGrid[
              TypeSystem`NestedGrid`PackagePrivate`$state$$, 
               TypeSystem`NestedGrid`PackagePrivate`$path$$, 
               TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
               TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
               TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
               TypeSystem`NestedGrid`PackagePrivate`localHold[
               TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
              TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
             Not[
              FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
        TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
          FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
          TypeSystem`SparseGrid[
           TypeSystem`H["(data no longer present)"]], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
         TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
      DynamicModuleValues :> {}], 
     TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
       TypeSystem`PackageScope`SubViewPathbar[
       TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`updateState[
        TypeSystem`NestedGrid`PackagePrivate`$state$$, 
         TypeSystem`NestedGrid`PackagePrivate`$path$$, 
         TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
         TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
         TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
         TypeSystem`NestedGrid`PackagePrivate`localHold[
         TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
      TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
     TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
      Framed[
       Dynamic[
        Replace[
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
         TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
            TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
            Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
            TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
            Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
             Blank[]], 
            Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
             Blank[]], 
            Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
             Blank[]]] :> (
           Increment[
            TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
           TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
            TypeSystem`NestedGrid`PackagePrivate`path$; 
           TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
            TypeSystem`NestedGrid`PackagePrivate`pathType$; 
           TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
            TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
           TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
            TypeSystem`NestedGrid`PackagePrivate`localHold[
             TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
           TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
            TypeSystem`NestedGrid`PackagePrivate`path$, 
             TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
          Spacer[10], Blank[] :> Spacer[10]}], 
        TrackedSymbols :> {
         TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
       None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
       ImageSize -> {Automatic, 15}], FontSize -> 1], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
     DynamicWrapperBox[
      DynamicBox[ToBoxes[
        Dataset`DatasetContent[
        2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
         "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
         "State" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
         "VPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
         Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
         Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
         Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
         Hold[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
       ImageSizeCache->{366., {154.13403328722342`, 159.86596671277658`}},
       TrackedSymbols:>{
        TypeSystem`NestedGrid`PackagePrivate`$state$$, 
         TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
      TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
      MouseAnnotation[],
      ImageSizeCache->{366., {154.13403328722342`, 159.86596671277658`}}],
     BaseStyle->{LineBreakWithin -> False},
     DynamicModuleValues:>{},
     Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
      CreateUUID[]),
     UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
    Deploy,
    DefaultBaseStyle->"Deploy"],
   Dataset`InterpretDataset[1],
   Editable->False,
   SelectWithContents->True,
   Selectable->False], "}"}]], "Output",
 CellChangeTimes->{
  3.9022905017324686`*^9, 3.902290552366115*^9, 3.902291323542019*^9, {
   3.9023967889658527`*^9, 3.902396815957265*^9}, 3.902396904464247*^9, 
   3.902398771716685*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"c938fab1-57da-4f98-8c04-1e59c792f270"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Primerjava z ostalimi dr\[ZHacek]avami", "Section",
 CellChangeTimes->{{3.9017176425080943`*^9, 3.9017176476070747`*^9}, {
  3.9022169382186484`*^9, 
  3.9022169483448668`*^9}},ExpressionUUID->"74871e7e-0500-4385-b105-\
0c18de1a4533"],

Cell["\<\
Spodnja tabela prikazuje dr\[ZHacek]ave z najvi\[SHacek]jim \[SHacek]tevilom \
strelskih incidentov v \[SHacek]olah od januarja 2009 do maja 2018.\
\>", "Text",
 CellChangeTimes->{{3.90228685431244*^9, 3.9022868578225155`*^9}, {
   3.90229777814061*^9, 3.9022978497618513`*^9}, {3.902297913590665*^9, 
   3.9022979447355833`*^9}, 3.90229807698044*^9, 
   3.902301842057409*^9},ExpressionUUID->"d79891aa-6791-4620-8474-\
504289b8ff84"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"podatki7", " ", "=", " ", 
  RowBox[{"Import", "[", 
   RowBox[{
   "\"\<C:\\\\Users\\\\Teja\\\\Desktop\\\\streljanja po drzavah.xlsx\>\"", 
    ",", " ", "\"\<Dataset\>\""}], "]"}]}]], "Input",
 CellChangeTimes->{{3.902293248190702*^9, 3.9022932866970463`*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"e7268da5-e008-49ff-8eba-dbd7b6e39649"],

Cell[BoxData[
 RowBox[{"{", 
  TagBox[
   TagBox[
    DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
     Association[
     "InitialData" -> {{"dr\[ZHacek]ava", "\[SHacek]tevilo streljanj"}, {
        "ZDA", 288.}, {"Mehika", 8.}, {"Ju\[ZHacek]na Afrika", 6.}, {
        "Nigerija", 4.}, {"Pakistan", 4.}, {"Afganistan", 3.}, {
        "Brazilija", 2.}, {"Kanada", 2.}, {"Francija", 2.}, {
        "Azerbajd\[ZHacek]an", 1.}, {"Kitajska", 1.}, {"Estonija", 1.}, {
        "Nem\[CHacek]ija", 1.}, {"Gr\[CHacek]ija", 1.}, {
        "Mad\[ZHacek]arska", 1.}, {"Kenija", 1.}, {"Rusija", 1.}, {
        "Tur\[CHacek]ija", 1.}}, "AllowEmbedding" -> True, "InitialShape" -> 
      TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[{
            TypeSystem`PackageScope`AtomShape[134.4], 
            TypeSystem`PackageScope`UnknownShape[False]}], 
          DirectedInfinity[1], 2, {All}]], 19, 
        DirectedInfinity[1], {}], "InitialType" -> TypeSystem`Vector[
        TypeSystem`Tuple[{
          TypeSystem`Atom[String], TypeSystem`AnyType}], 19], "Meta" -> 
      Association[], "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
      TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[{
            TypeSystem`PackageScope`AtomShape[134.4], 
            TypeSystem`PackageScope`UnknownShape[False]}], 
          DirectedInfinity[1], 2, {All}]], 19, 
        DirectedInfinity[1], {}], "Type" -> TypeSystem`Vector[
        TypeSystem`Tuple[{
          TypeSystem`Atom[String], TypeSystem`AnyType}], 19], "Path" -> {}, 
      "DisplayedRowCount" -> 19, "DisplayedColumnCount" -> 2, "DataRowCount" -> 
      19, "DataColumnCount" -> 2, "SortPaths" -> {}, "SortDirections" -> {}, 
      "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
     TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
     TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
     TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
     TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
     TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
     DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
         Style[
          Grid[{{
             Item[
              Pane[
               Annotation["dr\[ZHacek]ava", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 1}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{134.4, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation["\[SHacek]tevilo streljanj", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 2}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{190.4, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}]}, {
             Item[
              Pane[
               Annotation["ZDA", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 1}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{134.4, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["288.0"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 2}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}]}, {
             Item[
              Pane[
               Annotation["Mehika", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 1}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{134.4, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["8.0"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 2}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}]}, {
             Item[
              Pane[
               Annotation["Ju\[ZHacek]na Afrika", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 1}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{134.4, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["6.0"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 2}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}]}, {
             Item[
              Pane[
               Annotation["Nigerija", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 1}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{134.4, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["4.0"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 2}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}]}, {
             Item[
              Pane[
               Annotation["Pakistan", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 1}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{134.4, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["4.0"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 2}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}]}, {
             Item[
              Pane[
               Annotation["Afganistan", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 1}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{134.4, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["3.0"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 2}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}]}, {
             Item[
              Pane[
               Annotation["Brazilija", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 1}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{134.4, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["2.0"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 2}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}]}, {
             Item[
              Pane[
               Annotation["Kanada", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 1}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{134.4, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["2.0"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 2}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}]}, {
             Item[
              Pane[
               Annotation["Francija", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 1}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{134.4, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["2.0"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 2}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}]}, {
             Item[
              Pane[
               Annotation["Azerbajd\[ZHacek]an", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 1}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{134.4, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["1.0"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 2}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}]}, {
             Item[
              Pane[
               Annotation["Kitajska", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 1}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{134.4, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["1.0"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 2}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}]}, {
             Item[
              Pane[
               Annotation["Estonija", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 1}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{134.4, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["1.0"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 2}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}]}, {
             Item[
              Pane[
               Annotation["Nem\[CHacek]ija", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 1}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{134.4, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["1.0"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 2}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}]}, {
             Item[
              Pane[
               Annotation["Gr\[CHacek]ija", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 1}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{134.4, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["1.0"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 2}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}]}, {
             Item[
              Pane[
               Annotation["Mad\[ZHacek]arska", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 1}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{134.4, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["1.0"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 2}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}]}, {
             Item[
              Pane[
               Annotation["Kenija", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 1}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{134.4, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["1.0"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 2}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}]}, {
             Item[
              Pane[
               Annotation["Rusija", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 1}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{134.4, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["1.0"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 2}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}]}, {
             Item[
              Pane[
               Annotation["Tur\[CHacek]ija", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 1}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{134.4, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["1.0"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 2}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}]}}, 
           BaseStyle -> {
            ContextMenu -> 
             Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
               Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                 TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger,
                  TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True,
                  
                 TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                  TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                 TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                  Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
             "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
           Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
           Spacings -> {0, 0}, Alignment -> Left, 
           BaseStyle -> {
            FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
             Plain}], LineBreakWithin -> False, ContextMenu -> {}, 
          NumberMarks -> False, ShowAutoStyles -> False]], 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
      Dynamic[
       TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
       TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
          Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
          
          Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
            TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
            TypeSystem`NestedGrid`PackagePrivate`datasetData[
             TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
           TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
              FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
              TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
              TypeSystem`NestedGrid`PackagePrivate`renderGrid[
              TypeSystem`NestedGrid`PackagePrivate`$state$$, 
               TypeSystem`NestedGrid`PackagePrivate`$path$$, 
               TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
               TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
               TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
               TypeSystem`NestedGrid`PackagePrivate`localHold[
               TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
              TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
             Not[
              FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
        TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
          FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
          TypeSystem`SparseGrid[
           TypeSystem`H["(data no longer present)"]], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
         TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
      DynamicModuleValues :> {}], 
     TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
       TypeSystem`PackageScope`SubViewPathbar[
       TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`updateState[
        TypeSystem`NestedGrid`PackagePrivate`$state$$, 
         TypeSystem`NestedGrid`PackagePrivate`$path$$, 
         TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
         TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
         TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
         TypeSystem`NestedGrid`PackagePrivate`localHold[
         TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
      TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
     TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
      Framed[
       Dynamic[
        Replace[
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
         TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
            TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
            Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
            TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
            Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
             Blank[]], 
            Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
             Blank[]], 
            Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
             Blank[]]] :> (
           Increment[
            TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
           TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
            TypeSystem`NestedGrid`PackagePrivate`path$; 
           TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
            TypeSystem`NestedGrid`PackagePrivate`pathType$; 
           TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
            TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
           TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
            TypeSystem`NestedGrid`PackagePrivate`localHold[
             TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
           TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
            TypeSystem`NestedGrid`PackagePrivate`path$, 
             TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
          Spacer[10], Blank[] :> Spacer[10]}], 
        TrackedSymbols :> {
         TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
       None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
       ImageSize -> {Automatic, 15}], FontSize -> 1], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
     DynamicWrapperBox[
      DynamicBox[ToBoxes[
        Dataset`DatasetContent[
        2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
         "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
         "State" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
         "VPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
         Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
         Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
         Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
         Hold[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
       ImageSizeCache->{343., {262.1340332872234, 267.8659667127766}},
       TrackedSymbols:>{
        TypeSystem`NestedGrid`PackagePrivate`$state$$, 
         TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
      TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
      MouseAnnotation[],
      ImageSizeCache->{343., {262.1340332872234, 267.8659667127766}}],
     BaseStyle->{LineBreakWithin -> False},
     DynamicModuleValues:>{},
     Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
      CreateUUID[]),
     UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
    Deploy,
    DefaultBaseStyle->"Deploy"],
   Dataset`InterpretDataset[1],
   Editable->False,
   SelectWithContents->True,
   Selectable->False], "}"}]], "Output",
 CellChangeTimes->{3.9022932880650578`*^9},
 CellLabel->"Out[7]=",ExpressionUUID->"edbc3514-7b3e-4b7a-9dd3-8f6d92e53d2a"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"drzave", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"podatki7", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "i", "]"}], "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"i", ",", " ", "2", ",", " ", 
       RowBox[{"Length", "[", 
        RowBox[{"podatki7", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.902293857512628*^9, 3.902293870337634*^9}, {
   3.902293909897999*^9, 3.902294007931294*^9}, 3.902294074845952*^9, 
   3.902294326383941*^9, 3.9022957554109683`*^9},
 CellLabel->"In[50]:=",ExpressionUUID->"b5496c72-5143-46c9-955e-56423aee7859"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BarChart", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "288", ",", "8", ",", "6", ",", "4", ",", "4", ",", "3", ",", "2", ",", 
     "2", ",", "2", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
     "1", ",", "1", ",", "1", ",", "1"}], "}"}], ",", " ", 
   RowBox[{"ChartLabels", "\[Rule]", 
    RowBox[{"{", "drzave", "}"}]}], ",", " ", 
   RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", " ", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Dr\[ZHacek]ava\>\"", ",", "\"\<\[CapitalSHacek]t. streljanj\>\""}], 
     "}"}]}], ",", 
   RowBox[{"ChartStyle", "\[Rule]", "\"\<Pastel\>\""}]}], "]"}]], "Input",
 CellChangeTimes->{{3.902297415424189*^9, 3.902297517926027*^9}, {
  3.90229756265937*^9, 3.9022975938365583`*^9}, {3.9022976446421876`*^9, 
  3.902297716855282*^9}, {3.902311506784381*^9, 3.9023115122770824`*^9}, {
  3.902311549329853*^9, 3.902311555207009*^9}},
 CellLabel->
  "In[211]:=",ExpressionUUID->"440f80cd-eaa5-47b1-8ff1-e85e385e9d59"],

Cell[BoxData[
 GraphicsBox[{
   {Opacity[0], 
    PointBox[{{0.19412272374212486`, 0.}, {18.447958919478726`, 0.}}]}, {{}, 
    {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.574], 
     Thickness[Small]}], 
     {RGBColor[0.761959, 0.470832, 0.940597], EdgeForm[{Opacity[0.574], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0.5520410805212739, 0.}, {1.4479589194787261`, 
             288.}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{34.473478724986464`, 
            59.98488609592743}, {-147.62814745535584`, 164.07812500000003`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 288]& ,
         TagBoxNote->"288"],
        StyleBox["288", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[288, {}], "Tooltip"]& ]}, 
     {RGBColor[0.7928470000000001, 0.5451052941176471, 0.9487965294117647], 
      EdgeForm[{Opacity[0.574], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{1.5520410805212739`, 0.}, {2.447958919478726, 8.}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{62.390555808802375`, 87.90196317974333}, {
            154.9335063206846, 164.07812500000003`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 8]& ,
         TagBoxNote->"8"],
        StyleBox["8", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[8, {}], "Tooltip"]& ]}, 
     {RGBColor[0.8264064705882354, 0.6038653529411765, 0.8998942941176471], 
      EdgeForm[{Opacity[0.574], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{2.5520410805212737`, 0.}, {3.447958919478726, 6.}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{90.30763289261829, 115.81904026355926`}, {
            157.09466099051346`, 164.07812500000003`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 6]& ,
         TagBoxNote->"6"],
        StyleBox["6", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[6, {}], "Tooltip"]& ]}, 
     {RGBColor[0.8631717058823529, 0.6440095294117647, 0.7824699411764706], 
      EdgeForm[{Opacity[0.574], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{3.5520410805212737`, 0.}, {4.447958919478726, 4.}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{118.2247099764342, 143.73611734737517`}, {
            159.2558156603423, 164.07812500000003`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 4]& ,
         TagBoxNote->"4"],
        StyleBox["4", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[4, {}], "Tooltip"]& ]}, 
     {RGBColor[0.8917539999999999, 0.6780848823529412, 0.6986597058823529], 
      EdgeForm[{Opacity[0.574], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{4.552041080521273, 0.}, {5.447958919478726, 4.}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{146.14178706025012`, 171.65319443119108`}, {
            159.2558156603423, 164.07812500000003`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 4]& ,
         TagBoxNote->"4"],
        StyleBox["4", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[4, {}], "Tooltip"]& ]}, 
     {RGBColor[0.915925294117647, 0.7147013529411764, 0.6360555882352941], 
      EdgeForm[{Opacity[0.574], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{5.552041080521273, 0.}, {6.447958919478726, 3.}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{174.05886414406604`, 199.570271515007}, {
            160.33639299525674`, 164.07812500000003`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 3]& ,
         TagBoxNote->"3"],
        StyleBox["3", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[3, {}], "Tooltip"]& ]}, 
     {RGBColor[0.9338093529411765, 0.7568268235294118, 0.604679705882353], 
      EdgeForm[{Opacity[0.574], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{6.552041080521273, 0.}, {7.447958919478726, 2.}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{201.97594122788195`, 227.4873485988229}, {
            161.41697033017118`, 164.07812500000003`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 2]& ,
         TagBoxNote->"2"],
        StyleBox["2", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[2, {}], "Tooltip"]& ]}, 
     {RGBColor[0.9463749411764706, 0.805652, 0.5927459411764706], EdgeForm[{
      Opacity[0.574], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{7.552041080521273, 0.}, {8.447958919478726, 2.}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{229.89301831169786`, 255.40442568263882`}, {
            161.41697033017118`, 164.07812500000003`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 2]& ,
         TagBoxNote->"2"],
        StyleBox["2", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[2, {}], "Tooltip"]& ]}, 
     {RGBColor[0.9559851176470588, 0.8548228235294117, 0.5884280588235294], 
      EdgeForm[{Opacity[0.574], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{8.552041080521274, 0.}, {9.447958919478726, 2.}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{257.81009539551377`, 283.3215027664547}, {
            161.41697033017118`, 164.07812500000003`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 2]& ,
         TagBoxNote->"2"],
        StyleBox["2", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[2, {}], "Tooltip"]& ]}, 
     {RGBColor[0.9608658823529411, 0.9009451764705882, 0.5928979411764705], 
      EdgeForm[{Opacity[0.574], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{9.552041080521274, 0.}, {10.447958919478726`, 1.}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{285.7271724793297, 311.23857985027064`}, {
            162.4975476650856, 164.07812500000003`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 1]& ,
         TagBoxNote->"1"],
        StyleBox["1", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1, {}], "Tooltip"]& ]}, 
     {RGBColor[0.955600294117647, 0.9322416470588235, 0.6129268823529411], 
      EdgeForm[{Opacity[0.574], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{10.552041080521274`, 0.}, {11.447958919478726`, 1.},
              "RoundingRadius" -> 0]},
           ImageSizeCache->{{313.6442495631456, 339.15565693408655`}, {
            162.4975476650856, 164.07812500000003`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 1]& ,
         TagBoxNote->"1"],
        StyleBox["1", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1, {}], "Tooltip"]& ]}, 
     {RGBColor[0.9414671176470588, 0.9522546470588236, 0.6449329411764706], 
      EdgeForm[{Opacity[0.574], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{11.552041080521274`, 0.}, {12.447958919478726`, 1.},
              "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{341.5613266469615, 367.07273401790246`}, {
            162.4975476650856, 164.07812500000003`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 1]& ,
         TagBoxNote->"1"],
        StyleBox["1", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1, {}], "Tooltip"]& ]}, 
     {RGBColor[0.9045517647058824, 0.946510705882353, 0.7045801176470587], 
      EdgeForm[{Opacity[0.574], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{12.552041080521274`, 0.}, {13.447958919478726`, 1.},
              "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{369.4784037307774, 394.9898111017184}, {
            162.4975476650856, 164.07812500000003`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 1]& ,
         TagBoxNote->"1"],
        StyleBox["1", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1, {}], "Tooltip"]& ]}, 
     {RGBColor[0.8417701764705883, 0.9209678823529411, 0.7797895294117647], 
      EdgeForm[{Opacity[0.574], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{13.552041080521274`, 0.}, {14.447958919478726`, 1.},
              "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{397.3954808145933, 422.9068881855343}, {
            162.4975476650856, 164.07812500000003`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 1]& ,
         TagBoxNote->"1"],
        StyleBox["1", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1, {}], "Tooltip"]& ]}, 
     {RGBColor[0.7608623529411765, 0.8823978235294118, 0.8620844117647058], 
      EdgeForm[{Opacity[0.574], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{14.552041080521274`, 0.}, {15.447958919478726`, 1.},
              "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{425.31255789840924`, 450.8239652693502}, {
            162.4975476650856, 164.07812500000003`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 1]& ,
         TagBoxNote->"1"],
        StyleBox["1", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1, {}], "Tooltip"]& ]}, 
     {RGBColor[0.6464992352941177, 0.8266918823529412, 0.9263069411764706], 
      EdgeForm[{Opacity[0.574], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{15.552041080521274`, 0.}, {16.447958919478726`, 1.},
              "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{453.2296349822252, 478.7410423531661}, {
            162.4975476650856, 164.07812500000003`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 1]& ,
         TagBoxNote->"1"],
        StyleBox["1", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1, {}], "Tooltip"]& ]}, 
     {RGBColor[0.5369089411764706, 0.7690422941176471, 0.945467705882353], 
      EdgeForm[{Opacity[0.574], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{16.552041080521274`, 0.}, {17.447958919478726`, 1.},
              "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{481.1467120660411, 506.6581194369821}, {
            162.4975476650856, 164.07812500000003`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 1]& ,
         TagBoxNote->"1"],
        StyleBox["1", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1, {}], "Tooltip"]& ]}, 
     {RGBColor[0.431296, 0.709773, 0.927077], EdgeForm[{Opacity[0.574], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{17.552041080521274`, 0.}, {18.447958919478726`, 1.},
              "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{509.06378914985703`, 534.5751965207979}, {
            162.4975476650856, 164.07812500000003`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 1]& ,
         TagBoxNote->"1"],
        StyleBox["1", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1, {}], "Tooltip"]& ]}}, {}, {}}, {}, {}, {}, {}, 
   StyleBox[{
     {Thickness[Tiny], 
      LineBox[{{0.19412272374212486`, 0.}, {18.81303564339346, 0.}}], 
      StyleBox[
       {Thickness[Tiny], 
        InsetBox["\<\"Dr\[ZHacek]ava\"\>", 
         Offset[{10., 0.}, {18.447958919478726, 0.}], 
         ImageScaled[{0, Rational[1, 2]}], Automatic, {1, 0}]}, 
       "GraphicsLabel",
       StripOnInput->False]}, 
     StyleBox[{
       {Thickness[Tiny], 
        LineBox[{{0.5520410805212739, 0.}, 
          Offset[{-1.102182119232618*^-15, -6.}, {0.5520410805212739, 0.}]}], 
        LineBox[{{18.447958919478726`, 0.}, 
          Offset[{-1.102182119232618*^-15, -6.}, {18.447958919478726`, 
           0.}]}], {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {
          LineBox[{{1.4479589194787261`, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {1.4479589194787261`, 
             0.}]}], LineBox[{{1.5520410805212739`, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {1.5520410805212739`, 
             0.}]}], LineBox[{{2.447958919478726, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {2.447958919478726, 0.}]}],
           LineBox[{{2.5520410805212737`, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {2.5520410805212737`, 
             0.}]}], LineBox[{{3.447958919478726, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {3.447958919478726, 0.}]}],
           LineBox[{{3.552041080521273, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {3.552041080521273, 0.}]}],
           LineBox[{{4.447958919478726, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {4.447958919478726, 0.}]}],
           LineBox[{{4.552041080521273, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {4.552041080521273, 0.}]}],
           LineBox[{{5.447958919478726, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {5.447958919478726, 0.}]}],
           LineBox[{{5.552041080521273, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {5.552041080521273, 0.}]}],
           LineBox[{{6.447958919478726, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {6.447958919478726, 0.}]}],
           LineBox[{{6.552041080521273, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {6.552041080521273, 0.}]}],
           LineBox[{{7.447958919478726, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {7.447958919478726, 0.}]}],
           LineBox[{{7.552041080521273, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {7.552041080521273, 0.}]}],
           LineBox[{{8.447958919478726, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {8.447958919478726, 0.}]}],
           LineBox[{{8.552041080521272, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {8.552041080521272, 0.}]}],
           LineBox[{{9.447958919478726, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {9.447958919478726, 0.}]}],
           LineBox[{{9.552041080521274, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {9.552041080521274, 0.}]}],
           LineBox[{{10.447958919478726`, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {10.447958919478726`, 
             0.}]}], LineBox[{{10.552041080521274`, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {10.552041080521274`, 
             0.}]}], LineBox[{{11.447958919478726`, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {11.447958919478726`, 
             0.}]}], LineBox[{{11.552041080521274`, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {11.552041080521274`, 
             0.}]}], LineBox[{{12.447958919478726`, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {12.447958919478726`, 
             0.}]}], LineBox[{{12.552041080521274`, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {12.552041080521274`, 
             0.}]}], LineBox[{{13.447958919478726`, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {13.447958919478726`, 
             0.}]}], LineBox[{{13.552041080521274`, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {13.552041080521274`, 
             0.}]}], LineBox[{{14.447958919478726`, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {14.447958919478726`, 
             0.}]}], LineBox[{{14.552041080521274`, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {14.552041080521274`, 
             0.}]}], LineBox[{{15.447958919478726`, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {15.447958919478726`, 
             0.}]}], LineBox[{{15.552041080521274`, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {15.552041080521274`, 
             0.}]}], LineBox[{{16.447958919478726`, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {16.447958919478726`, 
             0.}]}], LineBox[{{16.552041080521274`, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {16.552041080521274`, 
             0.}]}], LineBox[{{17.447958919478726`, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {17.447958919478726`, 
             0.}]}], LineBox[{{17.552041080521274`, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {17.552041080521274`, 
             0.}]}]}, {}}}, 
       StyleBox[
        {Thickness[Tiny], 
         InsetBox["\<\"ZDA\"\>", Offset[{0, -2}, {1., 0.}], 
          ImageScaled[{Rational[1, 2], 1}], Automatic, {1, 0}], 
         InsetBox["\<\"Mehika\"\>", Offset[{0, -2}, {1.9999999999999998, 0.}],
           ImageScaled[{Rational[1, 2], 1}], Automatic, {1, 0}], 
         InsetBox["\<\"Ju\[ZHacek]na Afrika\"\>", Offset[{0, -2}, {3., 0.}], 
          ImageScaled[{Rational[1, 2], 1}], Automatic, {1, 0}], 
         InsetBox["\<\"Nigerija\"\>", Offset[{0, -2}, {4., 0.}], 
          ImageScaled[{Rational[1, 2], 1}], Automatic, {1, 0}], 
         InsetBox["\<\"Pakistan\"\>", Offset[{0, -2}, {5., 0.}], 
          ImageScaled[{Rational[1, 2], 1}], Automatic, {1, 0}], 
         InsetBox["\<\"Afganistan\"\>", Offset[{0, -2}, {6., 0.}], 
          ImageScaled[{Rational[1, 2], 1}], Automatic, {1, 0}], 
         InsetBox["\<\"Brazilija\"\>", Offset[{0, -2}, {7., 0.}], 
          ImageScaled[{Rational[1, 2], 1}], Automatic, {1, 0}], 
         InsetBox["\<\"Kanada\"\>", Offset[{0, -2}, {8., 0.}], 
          ImageScaled[{Rational[1, 2], 1}], Automatic, {1, 0}], 
         InsetBox["\<\"Francija\"\>", Offset[{0, -2}, {9., 0.}], 
          ImageScaled[{Rational[1, 2], 1}], Automatic, {1, 0}], 
         InsetBox["\<\"Azerbajd\[ZHacek]an\"\>", Offset[{0, -2}, {10., 0.}], 
          ImageScaled[{Rational[1, 2], 1}], Automatic, {1, 0}], 
         InsetBox["\<\"Kitajska\"\>", Offset[{0, -2}, {11., 0.}], 
          ImageScaled[{Rational[1, 2], 1}], Automatic, {1, 0}], 
         InsetBox["\<\"Estonija\"\>", Offset[{0, -2}, {12., 0.}], 
          ImageScaled[{Rational[1, 2], 1}], Automatic, {1, 0}], 
         InsetBox["\<\"Nem\[CHacek]ija\"\>", Offset[{0, -2}, {13., 0.}], 
          ImageScaled[{Rational[1, 2], 1}], Automatic, {1, 0}], 
         InsetBox["\<\"Gr\[CHacek]ija\"\>", Offset[{0, -2}, {14., 0.}], 
          ImageScaled[{Rational[1, 2], 1}], Automatic, {1, 0}], 
         InsetBox["\<\"Mad\[ZHacek]arska\"\>", Offset[{0, -2}, {15., 0.}], 
          ImageScaled[{Rational[1, 2], 1}], Automatic, {1, 0}], 
         InsetBox["\<\"Kenija\"\>", Offset[{0, -2}, {16., 0.}], 
          ImageScaled[{Rational[1, 2], 1}], Automatic, {1, 0}], 
         InsetBox["\<\"Rusija\"\>", Offset[{0, -2}, {17., 0.}], 
          ImageScaled[{Rational[1, 2], 1}], Automatic, {1, 0}], 
         InsetBox["\<\"Tur\[CHacek]ija\"\>", Offset[{0, -2}, {18., 0.}], 
          ImageScaled[{Rational[1, 2], 1}], Automatic, {1, 0}]}, 
        "GraphicsLabel",
        StripOnInput->False]}, "GraphicsTicks",
      StripOnInput->False]}, "GraphicsAxes",
    StripOnInput->False,
    Antialiasing->False]},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, True},
  AxesLabel->{
    FormBox["\"Dr\[ZHacek]ava\"", TraditionalForm], 
    FormBox["\"\[CapitalSHacek]t. streljanj\"", TraditionalForm]},
  AxesOrigin->{0.19412272374212486`, 0.},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& ), "CopiedValueFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& )},
  DisplayFunction->Identity,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->Large,
  PlotRange->{{All, All}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{None, Automatic}]], "Output",
 CellChangeTimes->{{3.9022974598889537`*^9, 3.90229748798067*^9}, 
   3.9022975968389163`*^9, {3.902297664321562*^9, 3.902297718650608*^9}, 
   3.9022977693157434`*^9, 3.9023115568249474`*^9},
 CellLabel->
  "Out[211]=",ExpressionUUID->"789471c7-1e62-4805-8135-0edfb3823a58"]
}, Open  ]],

Cell["\<\
Iz diagrama je razvidno, da streljanje v \[SHacek]olah predstavlja tako velik \
problem le Zdru\[ZHacek]enim dr\[ZHacek]avam Amerike, saj so v skoraj 10 \
letih na\[SHacek]teli kar 288 strelskih napadov. Dale\[CHacek] zadaj, na 2. \
mestu, je Mehika, z 8 napadi.\
\>", "Text",
 CellChangeTimes->{{3.9023243866564484`*^9, 
  3.90232453893847*^9}},ExpressionUUID->"c405f6ed-7352-4afe-bbec-\
50243df2b610"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Vzroki", "Section",
 CellChangeTimes->{{3.9017149802424192`*^9, 3.901714983153846*^9}, 
   3.9017150202680316`*^9, {3.90230201557839*^9, 
   3.9023020197812333`*^9}},ExpressionUUID->"bd201405-fc97-41b9-a854-\
92b816715a02"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"podatki8", " ", "=", " ", 
  RowBox[{"Import", "[", 
   RowBox[{
   "\"\<C:\\\\Users\\\\Teja\\\\Desktop\\\\Vzroki.xlsx\>\"", ",", " ", 
    "\"\<Dataset\>\""}], "]"}]}]], "Input",
 CellChangeTimes->{{3.902302986585092*^9, 3.9023030188889875`*^9}},
 CellLabel->
  "In[276]:=",ExpressionUUID->"16a8e731-50b3-4f34-9b5f-b9b2c5005998"],

Cell[BoxData[
 RowBox[{"{", 
  TagBox[
   TagBox[
    DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
     Association[
     "InitialData" -> {{
        "Rang", "Vzrok", "Dele\[ZHacek] strinjajo\[CHacek]ih [%]", 
         "Odstotek [%]"}, {
        1., "Ho\[CHacek]ejo se ma\[SHacek]\[CHacek]evati tistim, ki so jih \
prizadeli.", 87., 11.1}, {
        2., "Ostali vrstniki se nor\[CHacek]ujejo iz njih.", 86., 11.}, {
        3., "Ne cenijo \[ZHacek]ivljenja.", 62., 7.9}, {
        4., "Doma so bili \[ZHacek]rtve fizi\[CHacek]nega nasilja.", 61., 
         7.8}, {5., "Imajo psihi\[CHacek]ne probleme.", 56., 7.2}, {
        6., "Pi\[SHacek]tolo imajo na dosegu rok.", 56., 7.2}, {
        7., "Ne razumejo se s star\[SHacek]i.", 55., 7.}, {
        8., "Doma so bili pri\[CHacek]a fizi\[CHacek]nemu nasilju.", 54., 
         6.9}, {9., "Pijejo alkohol ali jemljejo droge.", 52., 6.7}, {
        10., "Nimajo dobrih prijateljev.", 49., 6.3}, {
        11., "Nasilje vidijo na TV, internetu in \
ra\[CHacek]unalni\[SHacek]kih igricah.", 37., 4.7}, {
        12., "Nasilje v njihovi soseski.", 34., 4.4}, {
        13., "Ostali vrstniki so jih prisilili v to.", 28., 3.6}, {
        14., "U\[CHacek]itelje ne briga zanje.", 26., 3.3}, {
        15., "Bojijo se za svojo varnost.", 20., 2.6}, {
        16., "Dolg\[CHacek]as jim je.", 18., 2.3}}, "AllowEmbedding" -> True, 
      "InitialShape" -> TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[{
            TypeSystem`PackageScope`UnknownShape[False], 
            TypeSystem`PackageScope`AtomShape[414.40000000000003`], 
            TypeSystem`PackageScope`UnknownShape[False], 
            TypeSystem`PackageScope`UnknownShape[False]}], 
          DirectedInfinity[1], 4, {All}]], 17, 
        DirectedInfinity[1], {}], "InitialType" -> TypeSystem`Vector[
        TypeSystem`Tuple[{TypeSystem`AnyType, 
          TypeSystem`Atom[String], TypeSystem`AnyType, TypeSystem`AnyType}], 
        17], "Meta" -> Association[], "RowTarget" -> 20, "ColumnTarget" -> 10,
       "Shape" -> TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[{
            TypeSystem`PackageScope`UnknownShape[False], 
            TypeSystem`PackageScope`AtomShape[414.40000000000003`], 
            TypeSystem`PackageScope`UnknownShape[False], 
            TypeSystem`PackageScope`UnknownShape[False]}], 
          DirectedInfinity[1], 4, {All}]], 17, 
        DirectedInfinity[1], {}], "Type" -> TypeSystem`Vector[
        TypeSystem`Tuple[{TypeSystem`AnyType, 
          TypeSystem`Atom[String], TypeSystem`AnyType, TypeSystem`AnyType}], 
        17], "Path" -> {}, "DisplayedRowCount" -> 17, "DisplayedColumnCount" -> 
      4, "DataRowCount" -> 17, "DataColumnCount" -> 4, "SortPaths" -> {}, 
      "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
     TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
     TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
     TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
     TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
     TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
     DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
         Style[
          Grid[{{
             Item[
              Pane[
               Annotation["Rang", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 1}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation["Vzrok", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 2}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{414.40000000000003`, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation["Dele\[ZHacek] strinjajo\[CHacek]ih [%]", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 3}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{246.40000000000003`, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation["Odstotek [%]", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 4}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{134.4, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}]}, {
             Item[
              Pane[
               Annotation[
                RawBoxes["1.0"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 1}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
               "Ho\[CHacek]ejo se ma\[SHacek]\[CHacek]evati tistim, ki so jih \
prizadeli.", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 2}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{414.40000000000003`, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["87.0"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 3}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["11.1"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 4}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}]}, {
             Item[
              Pane[
               Annotation[
                RawBoxes["2.0"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 1}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation["Ostali vrstniki se nor\[CHacek]ujejo iz njih.", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 2}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{414.40000000000003`, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["86.0"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 3}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["11.0"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 4}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}]}, {
             Item[
              Pane[
               Annotation[
                RawBoxes["3.0"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 1}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation["Ne cenijo \[ZHacek]ivljenja.", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 2}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{414.40000000000003`, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["62.0"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 3}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["7.9"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 4}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}]}, {
             Item[
              Pane[
               Annotation[
                RawBoxes["4.0"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 1}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
               "Doma so bili \[ZHacek]rtve fizi\[CHacek]nega nasilja.", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 2}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{414.40000000000003`, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["61.0"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 3}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["7.8"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 4}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}]}, {
             Item[
              Pane[
               Annotation[
                RawBoxes["5.0"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 1}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation["Imajo psihi\[CHacek]ne probleme.", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 2}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{414.40000000000003`, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["56.0"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 3}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["7.2"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 4}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}]}, {
             Item[
              Pane[
               Annotation[
                RawBoxes["6.0"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 1}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation["Pi\[SHacek]tolo imajo na dosegu rok.", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 2}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{414.40000000000003`, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["56.0"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 3}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["7.2"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 4}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}]}, {
             Item[
              Pane[
               Annotation[
                RawBoxes["7.0"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 1}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation["Ne razumejo se s star\[SHacek]i.", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 2}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{414.40000000000003`, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["55.0"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 3}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["7.0"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 4}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}]}, {
             Item[
              Pane[
               Annotation[
                RawBoxes["8.0"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 1}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
               "Doma so bili pri\[CHacek]a fizi\[CHacek]nemu nasilju.", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 2}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{414.40000000000003`, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["54.0"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 3}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["6.9"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 4}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}]}, {
             Item[
              Pane[
               Annotation[
                RawBoxes["9.0"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 1}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation["Pijejo alkohol ali jemljejo droge.", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 2}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{414.40000000000003`, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["52.0"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 3}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["6.7"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 4}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}]}, {
             Item[
              Pane[
               Annotation[
                RawBoxes["10.0"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 1}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation["Nimajo dobrih prijateljev.", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 2}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{414.40000000000003`, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["49.0"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 3}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["6.3"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 4}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}]}, {
             Item[
              Pane[
               Annotation[
                RawBoxes["11.0"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 1}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
               "Nasilje vidijo na TV, internetu in \
ra\[CHacek]unalni\[SHacek]kih igricah.", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 2}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{414.40000000000003`, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["37.0"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 3}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["4.7"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 4}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}]}, {
             Item[
              Pane[
               Annotation[
                RawBoxes["12.0"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 1}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation["Nasilje v njihovi soseski.", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 2}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{414.40000000000003`, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["34.0"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 3}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["4.4"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 4}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}]}, {
             Item[
              Pane[
               Annotation[
                RawBoxes["13.0"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 1}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation["Ostali vrstniki so jih prisilili v to.", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 2}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{414.40000000000003`, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["28.0"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 3}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["3.6"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 4}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}]}, {
             Item[
              Pane[
               Annotation[
                RawBoxes["14.0"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 1}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation["U\[CHacek]itelje ne briga zanje.", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 2}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{414.40000000000003`, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["26.0"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 3}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["3.3"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 4}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}]}, {
             Item[
              Pane[
               Annotation[
                RawBoxes["15.0"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 1}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation["Bojijo se za svojo varnost.", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 2}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{414.40000000000003`, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["20.0"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 3}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["2.6"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 4}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}]}, {
             Item[
              Pane[
               Annotation[
                RawBoxes["16.0"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 1}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation["Dolg\[CHacek]as jim je.", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 2}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{414.40000000000003`, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["18.0"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 3}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes["2.3"], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 4}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}]}}, 
           BaseStyle -> {
            ContextMenu -> 
             Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
               Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                 TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger,
                  TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True,
                  TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                  TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                 TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                  Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
             "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
           Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
           Spacings -> {0, 0}, Alignment -> Left, 
           BaseStyle -> {
            FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
             Plain}], LineBreakWithin -> False, ContextMenu -> {}, 
          NumberMarks -> False, ShowAutoStyles -> False]], 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
      Dynamic[
       TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
       TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
          Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
          
          Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
            TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
            TypeSystem`NestedGrid`PackagePrivate`datasetData[
             TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
           TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
              FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
              TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
              TypeSystem`NestedGrid`PackagePrivate`renderGrid[
              TypeSystem`NestedGrid`PackagePrivate`$state$$, 
               TypeSystem`NestedGrid`PackagePrivate`$path$$, 
               TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
               TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
               TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
               TypeSystem`NestedGrid`PackagePrivate`localHold[
               TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
              TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
             Not[
              FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
        TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
          FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
          TypeSystem`SparseGrid[
           TypeSystem`H["(data no longer present)"]], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
         TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
      DynamicModuleValues :> {}], 
     TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
       TypeSystem`PackageScope`SubViewPathbar[
       TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`updateState[
        TypeSystem`NestedGrid`PackagePrivate`$state$$, 
         TypeSystem`NestedGrid`PackagePrivate`$path$$, 
         TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
         TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
         TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
         TypeSystem`NestedGrid`PackagePrivate`localHold[
         TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
      TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
     TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
      Framed[
       Dynamic[
        Replace[
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
         TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
            TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
            Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
            TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
            Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
             Blank[]], 
            Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
             Blank[]], 
            Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
             Blank[]]] :> (
           Increment[
            TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
           TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
            TypeSystem`NestedGrid`PackagePrivate`path$; 
           TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
            TypeSystem`NestedGrid`PackagePrivate`pathType$; 
           TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
            TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
           TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
            TypeSystem`NestedGrid`PackagePrivate`localHold[
             TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
           TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
            TypeSystem`NestedGrid`PackagePrivate`path$, 
             TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
          Spacer[10], Blank[] :> Spacer[10]}], 
        TrackedSymbols :> {
         TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
       None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
       ImageSize -> {Automatic, 15}], FontSize -> 1], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
     DynamicWrapperBox[
      DynamicBox[ToBoxes[
        Dataset`DatasetContent[
        2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
         "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
         "State" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
         "VPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
         Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
         Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
         Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
         Hold[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
       ImageSizeCache->{890., {235.13403328722342`, 240.86596671277658`}},
       TrackedSymbols:>{
        TypeSystem`NestedGrid`PackagePrivate`$state$$, 
         TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
      TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
      MouseAnnotation[],
      ImageSizeCache->{890., {235.13403328722342`, 240.86596671277658`}}],
     BaseStyle->{LineBreakWithin -> False},
     DynamicModuleValues:>{},
     Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
      CreateUUID[]),
     UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
    Deploy,
    DefaultBaseStyle->"Deploy"],
   Dataset`InterpretDataset[1],
   Editable->False,
   SelectWithContents->True,
   Selectable->False], "}"}]], "Output",
 CellChangeTimes->{3.902303020311411*^9, 3.9023109050621853`*^9, 
  3.90236459215047*^9},
 CellLabel->
  "Out[276]=",ExpressionUUID->"4dd29025-31e3-42d5-8117-654469ba0727"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PieChart", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "11.1", ",", "11", ",", "7.9", ",", "7.8", ",", "7.2", ",", "7.2", ",", 
     "7", ",", "6.9", ",", "6.7", ",", "6.3", ",", "4.7", ",", "4.4", ",", 
     "3.6", ",", "3.3", ",", "2.6", ",", "2.3"}], "}"}], ",", 
   RowBox[{"ChartLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<1\>\"", ",", "\"\<2\>\"", ",", "\"\<3\>\"", ",", "\"\<4\>\"", ",", 
      "\"\<5\>\"", ",", "\"\<6\>\"", ",", "\"\<7\>\"", ",", "\"\<8\>\"", ",", 
      "\"\<9\>\"", ",", "\"\<10\>\"", ",", "\"\<11\>\"", ",", "\"\<12\>\"", 
      ",", "\"\<13\>\"", ",", "\"\<14\>\"", ",", "\"\<15\>\"", ",", 
      "\"\<16\>\""}], "}"}]}], ",", 
   RowBox[{"ChartStyle", "\[Rule]", "\"\<Pastel\>\""}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9023106099922695`*^9, 3.9023106637695284`*^9}, {
  3.902310737748886*^9, 3.902310747848418*^9}, {3.9023110023312817`*^9, 
  3.90231101105096*^9}, {3.9023646286391554`*^9, 3.9023647213229485`*^9}},
 CellLabel->
  "In[280]:=",ExpressionUUID->"c4432834-3114-4a7c-8df4-906a94fd3539"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {}, 
     DynamicModuleBox[{
      DynamicChart`click$121329$121547 = False, 
       DynamicChart`click$121333$121547 = False, 
       DynamicChart`click$121337$121547 = False, 
       DynamicChart`click$121341$121547 = False, 
       DynamicChart`click$121345$121547 = False, 
       DynamicChart`click$121349$121547 = False, 
       DynamicChart`click$121353$121547 = False, 
       DynamicChart`click$121357$121547 = False, 
       DynamicChart`click$121361$121547 = False, 
       DynamicChart`click$121365$121547 = False, 
       DynamicChart`click$121369$121547 = False, 
       DynamicChart`click$121373$121547 = False, 
       DynamicChart`click$121377$121547 = False, 
       DynamicChart`click$121381$121547 = False, 
       DynamicChart`click$121385$121547 = False, 
       DynamicChart`click$121389$121547 = False}, {{
        RGBColor[0.5, 0.5, 1.], 
        EdgeForm[{
          GrayLevel[0], 
          Opacity[0.5]}], {{{}, {{
            RGBColor[0.761959, 0.470832, 0.940597], 
            EdgeForm[{
              GrayLevel[0], 
              Opacity[0.5]}], 
            TagBox[
             GeometricTransformationBox[
              TagBox[
               TagBox[
                TooltipBox[
                 TagBox[
                  TagBox[
                   DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {2.444159084492859, 
                    3.141592653589793}]}, 
                    ImageSizeCache -> {{31.585786437626894`, 
                    181.41421356237308`}, {-97.82535357933102, \
-0.5857864376268793}}], "DelayedMouseEffectStyle"], StatusArea[#, 11.1]& , 
                  TagBoxNote -> "11.1"], 
                 StyleBox["11.1`", {}, StripOnInput -> False]], Annotation[#, 
                 Style[11.1, {}], "Tooltip"]& ], 
               EventHandlerTag[{
                "MouseClicked" :> 
                 FEPrivate`Set[DynamicChart`click$121329$121547, 
                   FEPrivate`Not[DynamicChart`click$121329$121547]], 
                 PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
                 True}]], 
              Dynamic[
               FEPrivate`If[
               DynamicChart`click$121329$121547, {{{1., 0.}, {0., 
                 1.}}, {-0.18796239021726394`, 0.0683384215782967}}, {{1, 
                0}, {0, 1}}, {{1, 0}, {0, 1}}], 
               TrackedSymbols :> {DynamicChart`click$121329$121547}]], 
             "DelayedClickEffect"]}, {
            RGBColor[0.7969654, 0.5550084, 0.9498898], 
            EdgeForm[{
              GrayLevel[0], 
              Opacity[0.5]}], 
            TagBox[
             GeometricTransformationBox[
              TagBox[
               TagBox[
                TooltipBox[
                 TagBox[
                  TagBox[
                   DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {1.7530087007031043`, 
                    2.444159084492859}]}, 
                    ImageSizeCache -> {{65.91131443665249, 
                    181.4142135623731}, {-147.98065869668656`, \
-0.5857864376268935}}], "DelayedMouseEffectStyle"], StatusArea[#, 11]& , 
                  TagBoxNote -> "11"], 
                 StyleBox["11", {}, StripOnInput -> False]], Annotation[#, 
                 Style[11, {}], "Tooltip"]& ], 
               
               EventHandlerTag[{
                "MouseClicked" :> 
                 FEPrivate`Set[DynamicChart`click$121333$121547, 
                   FEPrivate`Not[DynamicChart`click$121333$121547]], 
                 PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
                 True}]], 
              Dynamic[
               FEPrivate`If[
               DynamicChart`click$121333$121547, {{{1., 0.}, {0., 
                 1.}}, {-0.10072464032715217`, 0.1727846834385671}}, {{1, 
                0}, {0, 1}}, {{1, 0}, {0, 1}}], 
               TrackedSymbols :> {DynamicChart`click$121333$121547}]], 
             "DelayedClickEffect"]}, {
            RGBColor[
            0.8362105333333334, 0.6145704666666666, 0.8685811333333333], 
            EdgeForm[{
              GrayLevel[0], 
              Opacity[0.5]}], 
            TagBox[
             GeometricTransformationBox[
              TagBox[
               TagBox[
                TooltipBox[
                 TagBox[
                  TagBox[
                   DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {1.2566370614359172`, 
                    1.7530087007031043`}]}, 
                    ImageSizeCache -> {{151.94853918443775`, 
                    226.83971173549034`}, {-150.41421356237308`, \
-0.5857864376268935}}], "DelayedMouseEffectStyle"], StatusArea[#, 7.9]& , 
                  TagBoxNote -> "7.9"], 
                 StyleBox["7.9`", {}, StripOnInput -> False]], Annotation[#, 
                 Style[7.9, {}], "Tooltip"]& ], 
               
               EventHandlerTag[{
                "MouseClicked" :> 
                 FEPrivate`Set[DynamicChart`click$121337$121547, 
                   FEPrivate`Not[DynamicChart`click$121337$121547]], 
                 PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
                 True}]], 
              Dynamic[
               FEPrivate`If[
               DynamicChart`click$121337$121547, {{{1., 0.}, {0., 1.}}, {
                 0.013185119590275608`, 0.19956490829148832`}}, {{1, 0}, {0, 
                1}}, {{1, 0}, {0, 1}}], 
               TrackedSymbols :> {DynamicChart`click$121337$121547}]], 
             "DelayedClickEffect"]}, {
            RGBColor[0.8750956, 0.6580038, 0.746929], 
            EdgeForm[{
              GrayLevel[0], 
              Opacity[0.5]}], 
            TagBox[
             GeometricTransformationBox[
              TagBox[
               TagBox[
                TooltipBox[
                 TagBox[
                  TagBox[
                   DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {0.7665486074759094, 
                    1.2566370614359172`}]}, 
                    ImageSizeCache -> {{178.5857864376269, 
                    287.2996402208954}, {-143.21952145776064`, \
-0.5857864376268935}}], "DelayedMouseEffectStyle"], StatusArea[#, 7.8]& , 
                  TagBoxNote -> "7.8"], 
                 StyleBox["7.8`", {}, StripOnInput -> False]], Annotation[#, 
                 Style[7.8, {}], "Tooltip"]& ], 
               
               EventHandlerTag[{
                "MouseClicked" :> 
                 FEPrivate`Set[DynamicChart`click$121341$121547, 
                   FEPrivate`Not[DynamicChart`click$121341$121547]], 
                 PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
                 True}]], 
              Dynamic[
               FEPrivate`If[
               DynamicChart`click$121341$121547, {{{1., 0.}, {0., 1.}}, {
                 0.10610223686134684`, 0.16953558721701664`}}, {{1, 0}, {0, 
                1}}, {{1, 0}, {0, 1}}], 
               TrackedSymbols :> {DynamicChart`click$121341$121547}]], 
             "DelayedClickEffect"]}, {
            RGBColor[
            0.9065614666666666, 0.6959347333333333, 0.6557536666666666], 
            EdgeForm[{
              GrayLevel[0], 
              Opacity[0.5]}], 
            TagBox[
             GeometricTransformationBox[
              TagBox[
               TagBox[
                TooltipBox[
                 TagBox[
                  TagBox[
                   DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {0.3141592653589793, 
                    0.7665486074759094}]}, 
                    ImageSizeCache -> {{178.5857864376269, 
                    321.2195214577606}, {-105.3812495168554, \
-0.5857864376268793}}], "DelayedMouseEffectStyle"], StatusArea[#, 7.2]& , 
                  TagBoxNote -> "7.2"], 
                 StyleBox["7.2`", {}, StripOnInput -> False]], Annotation[#, 
                 Style[7.2, {}], "Tooltip"]& ], 
               
               EventHandlerTag[{
                "MouseClicked" :> 
                 FEPrivate`Set[DynamicChart`click$121345$121547, 
                   FEPrivate`Not[DynamicChart`click$121345$121547]], 
                 PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
                 True}]], 
              Dynamic[
               FEPrivate`If[
               DynamicChart`click$121345$121547, {{{1., 0.}, {0., 1.}}, {
                 0.17150533123873046`, 0.10288790675630127`}}, {{1, 0}, {0, 
                1}}, {{1, 0}, {0, 1}}], 
               TrackedSymbols :> {DynamicChart`click$121345$121547}]], 
             "DelayedClickEffect"]}, {
            RGBColor[0.927848, 0.742785, 0.6151383333333333], 
            EdgeForm[{
              GrayLevel[0], 
              Opacity[0.5]}], 
            TagBox[
             GeometricTransformationBox[
              TagBox[
               TagBox[
                TooltipBox[
                 TagBox[
                  TagBox[
                   DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {-0.13823007675795118`, 
                    0.3141592653589793}]}, 
                    ImageSizeCache -> {{178.5857864376269, 
                    328.4142135623731}, {-48.83971173549037, 
                    19.669386293014952`}}], "DelayedMouseEffectStyle"], 
                  StatusArea[#, 7.2]& , TagBoxNote -> "7.2"], 
                 StyleBox["7.2`", {}, StripOnInput -> False]], Annotation[#, 
                 Style[7.2, {}], "Tooltip"]& ], 
               
               EventHandlerTag[{
                "MouseClicked" :> 
                 FEPrivate`Set[DynamicChart`click$121349$121547, 
                   FEPrivate`Not[DynamicChart`click$121349$121547]], 
                 PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
                 True}]], 
              Dynamic[
               FEPrivate`If[
               DynamicChart`click$121349$121547, {{{1., 0.}, {0., 1.}}, {
                 0.19922672182863452`, 0.017570239310148606`}}, {{1, 0}, {0, 
                1}}, {{1, 0}, {0, 1}}], 
               TrackedSymbols :> {DynamicChart`click$121349$121547}]], 
             "DelayedClickEffect"]}, {
            RGBColor[0.9440982, 0.7955892, 0.5942686], 
            EdgeForm[{
              GrayLevel[0], 
              Opacity[0.5]}], 
            TagBox[
             GeometricTransformationBox[
              TagBox[
               TagBox[
                TooltipBox[
                 TagBox[
                  TagBox[
                   DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-0.5780530482605224, -0.13823007675795118`}]}, 
                    ImageSizeCache -> {{178.5857864376269, 
                    327.01204313978087`}, {-3.4142135623730923`, 
                    79.73418253231073}}], "DelayedMouseEffectStyle"], 
                  StatusArea[#, 7]& , TagBoxNote -> "7"], 
                 StyleBox["7", {}, StripOnInput -> False]], Annotation[#, 
                 Style[7, {}], "Tooltip"]& ], 
               
               EventHandlerTag[{
                "MouseClicked" :> 
                 FEPrivate`Set[DynamicChart`click$121353$121547, 
                   FEPrivate`Not[DynamicChart`click$121353$121547]], 
                 PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
                 True}]], 
              Dynamic[
               FEPrivate`If[
               DynamicChart`click$121353$121547, {{{1., 0.}, {0., 1.}}, {
                 0.18730997734963845`, -0.07010686403825188}}, {{1, 0}, {0, 
                1}}, {{1, 0}, {0, 1}}], 
               TrackedSymbols :> {DynamicChart`click$121353$121547}]], 
             "DelayedClickEffect"]}, {
            RGBColor[0.9556597333333333, 0.851748, 0.5881300666666667], 
            EdgeForm[{
              GrayLevel[0], 
              Opacity[0.5]}], 
            TagBox[
             GeometricTransformationBox[
              TagBox[
               TagBox[
                TooltipBox[
                 TagBox[
                  TagBox[
                   DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-1.0115928344559144`, -0.5780530482605224}]}, 
                    ImageSizeCache -> {{178.5857864376269, 
                    304.5308354485679}, {-3.4142135623730923`, 
                    124.02287016688044`}}], "DelayedMouseEffectStyle"], 
                  StatusArea[#, 6.9]& , TagBoxNote -> "6.9"], 
                 StyleBox["6.9`", {}, StripOnInput -> False]], Annotation[#, 
                 Style[6.9, {}], "Tooltip"]& ], 
               
               EventHandlerTag[{
                "MouseClicked" :> 
                 FEPrivate`Set[DynamicChart`click$121357$121547, 
                   FEPrivate`Not[DynamicChart`click$121357$121547]], 
                 PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
                 True}]], 
              Dynamic[
               FEPrivate`If[
               DynamicChart`click$121357$121547, {{{1., 0.}, {0., 1.}}, {
                 0.14008223015676116`, -0.14274792045528437`}}, {{1, 0}, {0, 
                1}}, {{1, 0}, {0, 1}}], 
               TrackedSymbols :> {DynamicChart`click$121357$121547}]], 
             "DelayedClickEffect"]}, {
            RGBColor[0.9611912666666667, 0.90402, 0.5931959333333333], 
            EdgeForm[{
              GrayLevel[0], 
              Opacity[0.5]}], 
            TagBox[
             GeometricTransformationBox[
              TagBox[
               TagBox[
                TooltipBox[
                 TagBox[
                  TagBox[
                   DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-1.4325662500369463`, -1.0115928344559144`}]}, 
                    ImageSizeCache -> {{178.5857864376269, 
                    259.39935765546284`}, {-3.414213562373078, 
                    145.01204313978084`}}], "DelayedMouseEffectStyle"], 
                  StatusArea[#, 6.7]& , TagBoxNote -> "6.7"], 
                 StyleBox["6.7`", {}, StripOnInput -> False]], Annotation[#, 
                 Style[6.7, {}], "Tooltip"]& ], 
               
               EventHandlerTag[{
                "MouseClicked" :> 
                 FEPrivate`Set[DynamicChart`click$121361$121547, 
                   FEPrivate`Not[DynamicChart`click$121361$121547]], 
                 PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
                 True}]], 
              Dynamic[
               FEPrivate`If[
               DynamicChart`click$121361$121547, {{{1., 0.}, {0., 1.}}, {
                 0.06833842157829652, -0.18796239021726402`}}, {{1, 0}, {0, 
                1}}, {{1, 0}, {0, 1}}], 
               TrackedSymbols :> {DynamicChart`click$121361$121547}]], 
             "DelayedClickEffect"]}, {
            RGBColor[0.9537862, 0.937389, 0.6180996], 
            EdgeForm[{
              GrayLevel[0], 
              Opacity[0.5]}], 
            TagBox[
             GeometricTransformationBox[
              TagBox[
               TagBox[
                TooltipBox[
                 TagBox[
                  TagBox[
                   DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-1.8284069243892604`, -1.4325662500369463`}]}, 
                    ImageSizeCache -> {{141.1344897621696, 
                    201.66938629301478`}, {-3.414213562373078, 
                    146.4142135623731}}], "DelayedMouseEffectStyle"], 
                  StatusArea[#, 6.3]& , TagBoxNote -> "6.3"], 
                 StyleBox["6.3`", {}, StripOnInput -> False]], Annotation[#, 
                 Style[6.3, {}], "Tooltip"]& ], 
               
               EventHandlerTag[{
                "MouseClicked" :> 
                 FEPrivate`Set[DynamicChart`click$121365$121547, 
                   FEPrivate`Not[DynamicChart`click$121365$121547]], 
                 PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
                 True}]], 
              Dynamic[
               FEPrivate`If[
               DynamicChart`click$121365$121547, {{{1., 0.}, {0., 
                 1.}}, {-0.011930964278034273`, -0.19964381305564236`}}, {{1, 
                0}, {0, 1}}, {{1, 0}, {0, 1}}], 
               TrackedSymbols :> {DynamicChart`click$121365$121547}]], 
             "DelayedClickEffect"]}, {
            RGBColor[0.929162, 0.95034, 0.6648153333333333], 
            EdgeForm[{
              GrayLevel[0], 
              Opacity[0.5]}], 
            TagBox[
             GeometricTransformationBox[
              TagBox[
               TagBox[
                TooltipBox[
                 TagBox[
                  TagBox[
                   DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-2.1237166338267004`, -1.8284069243892604`}]}, 
                    ImageSizeCache -> {{101.3851158333164, 
                    181.4142135623731}, {-3.414213562373078, 
                    141.56343226345103`}}], "DelayedMouseEffectStyle"], 
                  StatusArea[#, 4.7]& , TagBoxNote -> "4.7"], 
                 StyleBox["4.7`", {}, StripOnInput -> False]], Annotation[#, 
                 Style[4.7, {}], "Tooltip"]& ], 
               
               EventHandlerTag[{
                "MouseClicked" :> 
                 FEPrivate`Set[DynamicChart`click$121369$121547, 
                   FEPrivate`Not[DynamicChart`click$121369$121547]], 
                 PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
                 True}]], 
              Dynamic[
               FEPrivate`If[
               DynamicChart`click$121369$121547, {{{1., 0.}, {0., 
                 1.}}, {-0.0788525448685903, -0.18379955431868425`}}, {{1, 
                0}, {0, 1}}, {{1, 0}, {0, 1}}], 
               TrackedSymbols :> {DynamicChart`click$121369$121547}]], 
             "DelayedClickEffect"]}, {
            RGBColor[
            0.8831367333333333, 0.9406246666666667, 0.7349350666666666], 
            EdgeForm[{
              GrayLevel[0], 
              Opacity[0.5]}], 
            TagBox[
             GeometricTransformationBox[
              TagBox[
               TagBox[
                TooltipBox[
                 TagBox[
                  TagBox[
                   DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-2.4001767873426036`, -2.1237166338267004`}]}, 
                    ImageSizeCache -> {{70.17135818597517, 
                    181.4142135623731}, {-3.4142135623730923`, 
                    124.51040238619281`}}], "DelayedMouseEffectStyle"], 
                  StatusArea[#, 4.4]& , TagBoxNote -> "4.4"], 
                 StyleBox["4.4`", {}, StripOnInput -> False]], Annotation[#, 
                 Style[4.4, {}], "Tooltip"]& ], 
               
               EventHandlerTag[{
                "MouseClicked" :> 
                 FEPrivate`Set[DynamicChart`click$121373$121547, 
                   FEPrivate`Not[DynamicChart`click$121373$121547]], 
                 PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
                 True}]], 
              Dynamic[
               FEPrivate`If[
               DynamicChart`click$121373$121547, {{{1., 0.}, {0., 
                 1.}}, {-0.12748479794973808`, -0.15410264855515776`}}, {{1, 
                0}, {0, 1}}, {{1, 0}, {0, 1}}], 
               TrackedSymbols :> {DynamicChart`click$121373$121547}]], 
             "DelayedClickEffect"]}, {
            RGBColor[0.7952328000000001, 0.8988539999999999, 0.8302508], 
            EdgeForm[{
              GrayLevel[0], 
              Opacity[0.5]}], 
            TagBox[
             GeometricTransformationBox[
              TagBox[
               TagBox[
                TooltipBox[
                 TagBox[
                  TagBox[
                   DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-2.626371458401068, -2.4001767873426036`}]}, 
                    ImageSizeCache -> {{50.668774501206556`, 
                    181.4142135623731}, {-3.4142135623730923`, 
                    98.68813635616354}}], "DelayedMouseEffectStyle"], 
                  StatusArea[#, 3.6]& , TagBoxNote -> "3.6"], 
                 StyleBox["3.6`", {}, StripOnInput -> False]], Annotation[#, 
                 Style[3.6, {}], "Tooltip"]& ], 
               
               EventHandlerTag[{
                "MouseClicked" :> 
                 FEPrivate`Set[DynamicChart`click$121377$121547, 
                   FEPrivate`Not[DynamicChart`click$121377$121547]], 
                 PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
                 True}]], 
              Dynamic[
               FEPrivate`If[
               DynamicChart`click$121377$121547, {{{1., 0.}, {0., 
                 1.}}, {-0.16180339887498962`, -0.11755705045849443`}}, {{1, 
                0}, {0, 1}}, {{1, 0}, {0, 1}}], 
               TrackedSymbols :> {DynamicChart`click$121377$121547}]], 
             "DelayedClickEffect"]}, {
            RGBColor[0.6769960666666667, 0.8415468, 0.9091809333333333], 
            EdgeForm[{
              GrayLevel[0], 
              Opacity[0.5]}], 
            TagBox[
             GeometricTransformationBox[
              TagBox[
               TagBox[
                TooltipBox[
                 TagBox[
                  TagBox[
                   DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-2.833716573537994, -2.626371458401068}]}, 
                    ImageSizeCache -> {{38.4978232345957, 
                    181.4142135623731}, {-3.4142135623730923`, 
                    71.84513276997187}}], "DelayedMouseEffectStyle"], 
                  StatusArea[#, 3.3]& , TagBoxNote -> "3.3"], 
                 StyleBox["3.3`", {}, StripOnInput -> False]], Annotation[#, 
                 Style[3.3, {}], "Tooltip"]& ], 
               
               EventHandlerTag[{
                "MouseClicked" :> 
                 FEPrivate`Set[DynamicChart`click$121381$121547, 
                   FEPrivate`Not[DynamicChart`click$121381$121547]], 
                 PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
                 True}]], 
              Dynamic[
               FEPrivate`If[
               DynamicChart`click$121381$121547, {{{1., 0.}, {0., 
                 1.}}, {-0.18330048438137966`, -0.08000582744745284}}, {{1, 
                0}, {0, 1}}, {{1, 0}, {0, 1}}], 
               TrackedSymbols :> {DynamicChart`click$121381$121547}]], 
             "DelayedClickEffect"]}, {
            RGBColor[0.5509906666666667, 0.7769448666666667, 0.9479198], 
            EdgeForm[{
              GrayLevel[0], 
              Opacity[0.5]}], 
            TagBox[
             GeometricTransformationBox[
              TagBox[
               TagBox[
                TooltipBox[
                 TagBox[
                  TagBox[
                   DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-2.9970793915246636`, -2.833716573537994}]}, 
                    ImageSizeCache -> {{33.11809700303718, 
                    181.4142135623731}, {-3.4142135623731065`, 
                    43.960398198390834`}}], "DelayedMouseEffectStyle"], 
                  StatusArea[#, 2.6]& , TagBoxNote -> "2.6"], 
                 StyleBox["2.6`", {}, StripOnInput -> False]], Annotation[#, 
                 Style[2.6, {}], "Tooltip"]& ], 
               
               EventHandlerTag[{
                "MouseClicked" :> 
                 FEPrivate`Set[DynamicChart`click$121385$121547, 
                   FEPrivate`Not[DynamicChart`click$121385$121547]], 
                 PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
                 True}]], 
              Dynamic[
               FEPrivate`If[
               DynamicChart`click$121385$121547, {{{1., 0.}, {0., 
                 1.}}, {-0.19490537455731546`, -0.044854152189876116`}}, {{1, 
                0}, {0, 1}}, {{1, 0}, {0, 1}}], 
               TrackedSymbols :> {DynamicChart`click$121385$121547}]], 
             "DelayedClickEffect"]}, {
            RGBColor[0.431296, 0.709773, 0.927077], 
            EdgeForm[{
              GrayLevel[0], 
              Opacity[0.5]}], 
            TagBox[
             GeometricTransformationBox[
              TagBox[
               TagBox[
                TooltipBox[
                 TagBox[
                  TagBox[
                   DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-3.141592653589793, -2.9970793915246636`}]}, 
                    ImageSizeCache -> {{31.585786437626894`, 
                    181.41421356237308`}, {-3.414213562373096, 
                    20.583798597554054`}}], "DelayedMouseEffectStyle"], 
                  StatusArea[#, 2.3]& , TagBoxNote -> "2.3"], 
                 StyleBox["2.3`", {}, StripOnInput -> False]], Annotation[#, 
                 Style[2.3, {}], "Tooltip"]& ], 
               
               EventHandlerTag[{
                "MouseClicked" :> 
                 FEPrivate`Set[DynamicChart`click$121389$121547, 
                   FEPrivate`Not[DynamicChart`click$121389$121547]], 
                 PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
                 True}]], 
              Dynamic[
               FEPrivate`If[
               DynamicChart`click$121389$121547, {{{1., 0.}, {0., 
                 1.}}, {-0.19947812504646475`, -0.014438754376572044`}}, {{1, 
                0}, {0, 1}}, {{1, 0}, {0, 1}}], 
               TrackedSymbols :> {DynamicChart`click$121389$121547}]], 
             "DelayedClickEffect"]}}}, {}}, {}}, {{{
          TagBox[
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {}}, StatusArea[#, 11.1]& , TagBoxNote -> "11.1"], 
               StyleBox["11.1`", {}, StripOnInput -> False]], Annotation[#, 
               Style[11.1, {}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> 
               FEPrivate`Set[DynamicChart`click$121329$121547, 
                 FEPrivate`Not[DynamicChart`click$121329$121547]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             FEPrivate`If[
             DynamicChart`click$121329$121547, {{{1., 0.}, {0., 
               1.}}, {-0.18796239021726394`, 0.0683384215782967}}, {{1, 0}, {
              0, 1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {DynamicChart`click$121329$121547}]], 
           "DelayedClickEffect"], 
          TagBox[
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {}}, StatusArea[#, 11]& , TagBoxNote -> "11"], 
               StyleBox["11", {}, StripOnInput -> False]], Annotation[#, 
               Style[11, {}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> 
               FEPrivate`Set[DynamicChart`click$121333$121547, 
                 FEPrivate`Not[DynamicChart`click$121333$121547]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             FEPrivate`If[
             DynamicChart`click$121333$121547, {{{1., 0.}, {0., 
               1.}}, {-0.10072464032715217`, 0.1727846834385671}}, {{1, 0}, {
              0, 1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {DynamicChart`click$121333$121547}]], 
           "DelayedClickEffect"], 
          TagBox[
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {}}, StatusArea[#, 7.9]& , TagBoxNote -> "7.9"], 
               StyleBox["7.9`", {}, StripOnInput -> False]], Annotation[#, 
               Style[7.9, {}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> 
               FEPrivate`Set[DynamicChart`click$121337$121547, 
                 FEPrivate`Not[DynamicChart`click$121337$121547]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             FEPrivate`If[
             DynamicChart`click$121337$121547, {{{1., 0.}, {0., 1.}}, {
               0.013185119590275608`, 0.19956490829148832`}}, {{1, 0}, {0, 
              1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {DynamicChart`click$121337$121547}]], 
           "DelayedClickEffect"], 
          TagBox[
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {}}, StatusArea[#, 7.8]& , TagBoxNote -> "7.8"], 
               StyleBox["7.8`", {}, StripOnInput -> False]], Annotation[#, 
               Style[7.8, {}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> 
               FEPrivate`Set[DynamicChart`click$121341$121547, 
                 FEPrivate`Not[DynamicChart`click$121341$121547]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             FEPrivate`If[
             DynamicChart`click$121341$121547, {{{1., 0.}, {0., 1.}}, {
               0.10610223686134684`, 0.16953558721701664`}}, {{1, 0}, {0, 
              1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {DynamicChart`click$121341$121547}]], 
           "DelayedClickEffect"], 
          TagBox[
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {}}, StatusArea[#, 7.2]& , TagBoxNote -> "7.2"], 
               StyleBox["7.2`", {}, StripOnInput -> False]], Annotation[#, 
               Style[7.2, {}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> 
               FEPrivate`Set[DynamicChart`click$121345$121547, 
                 FEPrivate`Not[DynamicChart`click$121345$121547]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             FEPrivate`If[
             DynamicChart`click$121345$121547, {{{1., 0.}, {0., 1.}}, {
               0.17150533123873046`, 0.10288790675630127`}}, {{1, 0}, {0, 
              1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {DynamicChart`click$121345$121547}]], 
           "DelayedClickEffect"], 
          TagBox[
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {}}, StatusArea[#, 7.2]& , TagBoxNote -> "7.2"], 
               StyleBox["7.2`", {}, StripOnInput -> False]], Annotation[#, 
               Style[7.2, {}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> 
               FEPrivate`Set[DynamicChart`click$121349$121547, 
                 FEPrivate`Not[DynamicChart`click$121349$121547]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             FEPrivate`If[
             DynamicChart`click$121349$121547, {{{1., 0.}, {0., 1.}}, {
               0.19922672182863452`, 0.017570239310148606`}}, {{1, 0}, {0, 
              1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {DynamicChart`click$121349$121547}]], 
           "DelayedClickEffect"], 
          TagBox[
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {}}, StatusArea[#, 7]& , TagBoxNote -> "7"], 
               StyleBox["7", {}, StripOnInput -> False]], Annotation[#, 
               Style[7, {}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> 
               FEPrivate`Set[DynamicChart`click$121353$121547, 
                 FEPrivate`Not[DynamicChart`click$121353$121547]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             FEPrivate`If[
             DynamicChart`click$121353$121547, {{{1., 0.}, {0., 1.}}, {
               0.18730997734963845`, -0.07010686403825188}}, {{1, 0}, {0, 
              1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {DynamicChart`click$121353$121547}]], 
           "DelayedClickEffect"], 
          TagBox[
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {}}, StatusArea[#, 6.9]& , TagBoxNote -> "6.9"], 
               StyleBox["6.9`", {}, StripOnInput -> False]], Annotation[#, 
               Style[6.9, {}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> 
               FEPrivate`Set[DynamicChart`click$121357$121547, 
                 FEPrivate`Not[DynamicChart`click$121357$121547]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             FEPrivate`If[
             DynamicChart`click$121357$121547, {{{1., 0.}, {0., 1.}}, {
               0.14008223015676116`, -0.14274792045528437`}}, {{1, 0}, {0, 
              1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {DynamicChart`click$121357$121547}]], 
           "DelayedClickEffect"], 
          TagBox[
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {}}, StatusArea[#, 6.7]& , TagBoxNote -> "6.7"], 
               StyleBox["6.7`", {}, StripOnInput -> False]], Annotation[#, 
               Style[6.7, {}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> 
               FEPrivate`Set[DynamicChart`click$121361$121547, 
                 FEPrivate`Not[DynamicChart`click$121361$121547]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             FEPrivate`If[
             DynamicChart`click$121361$121547, {{{1., 0.}, {0., 1.}}, {
               0.06833842157829652, -0.18796239021726402`}}, {{1, 0}, {0, 
              1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {DynamicChart`click$121361$121547}]], 
           "DelayedClickEffect"], 
          TagBox[
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {}}, StatusArea[#, 6.3]& , TagBoxNote -> "6.3"], 
               StyleBox["6.3`", {}, StripOnInput -> False]], Annotation[#, 
               Style[6.3, {}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> 
               FEPrivate`Set[DynamicChart`click$121365$121547, 
                 FEPrivate`Not[DynamicChart`click$121365$121547]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             FEPrivate`If[
             DynamicChart`click$121365$121547, {{{1., 0.}, {0., 
               1.}}, {-0.011930964278034273`, -0.19964381305564236`}}, {{1, 
              0}, {0, 1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {DynamicChart`click$121365$121547}]], 
           "DelayedClickEffect"], 
          TagBox[
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {}}, StatusArea[#, 4.7]& , TagBoxNote -> "4.7"], 
               StyleBox["4.7`", {}, StripOnInput -> False]], Annotation[#, 
               Style[4.7, {}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> 
               FEPrivate`Set[DynamicChart`click$121369$121547, 
                 FEPrivate`Not[DynamicChart`click$121369$121547]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             FEPrivate`If[
             DynamicChart`click$121369$121547, {{{1., 0.}, {0., 
               1.}}, {-0.0788525448685903, -0.18379955431868425`}}, {{1, 0}, {
              0, 1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {DynamicChart`click$121369$121547}]], 
           "DelayedClickEffect"], 
          TagBox[
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {}}, StatusArea[#, 4.4]& , TagBoxNote -> "4.4"], 
               StyleBox["4.4`", {}, StripOnInput -> False]], Annotation[#, 
               Style[4.4, {}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> 
               FEPrivate`Set[DynamicChart`click$121373$121547, 
                 FEPrivate`Not[DynamicChart`click$121373$121547]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             FEPrivate`If[
             DynamicChart`click$121373$121547, {{{1., 0.}, {0., 
               1.}}, {-0.12748479794973808`, -0.15410264855515776`}}, {{1, 
              0}, {0, 1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {DynamicChart`click$121373$121547}]], 
           "DelayedClickEffect"], 
          TagBox[
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {}}, StatusArea[#, 3.6]& , TagBoxNote -> "3.6"], 
               StyleBox["3.6`", {}, StripOnInput -> False]], Annotation[#, 
               Style[3.6, {}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> 
               FEPrivate`Set[DynamicChart`click$121377$121547, 
                 FEPrivate`Not[DynamicChart`click$121377$121547]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             FEPrivate`If[
             DynamicChart`click$121377$121547, {{{1., 0.}, {0., 
               1.}}, {-0.16180339887498962`, -0.11755705045849443`}}, {{1, 
              0}, {0, 1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {DynamicChart`click$121377$121547}]], 
           "DelayedClickEffect"], 
          TagBox[
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {}}, StatusArea[#, 3.3]& , TagBoxNote -> "3.3"], 
               StyleBox["3.3`", {}, StripOnInput -> False]], Annotation[#, 
               Style[3.3, {}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> 
               FEPrivate`Set[DynamicChart`click$121381$121547, 
                 FEPrivate`Not[DynamicChart`click$121381$121547]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             FEPrivate`If[
             DynamicChart`click$121381$121547, {{{1., 0.}, {0., 
               1.}}, {-0.18330048438137966`, -0.08000582744745284}}, {{1, 
              0}, {0, 1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {DynamicChart`click$121381$121547}]], 
           "DelayedClickEffect"], 
          TagBox[
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {}}, StatusArea[#, 2.6]& , TagBoxNote -> "2.6"], 
               StyleBox["2.6`", {}, StripOnInput -> False]], Annotation[#, 
               Style[2.6, {}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> 
               FEPrivate`Set[DynamicChart`click$121385$121547, 
                 FEPrivate`Not[DynamicChart`click$121385$121547]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             FEPrivate`If[
             DynamicChart`click$121385$121547, {{{1., 0.}, {0., 
               1.}}, {-0.19490537455731546`, -0.044854152189876116`}}, {{1, 
              0}, {0, 1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {DynamicChart`click$121385$121547}]], 
           "DelayedClickEffect"], 
          TagBox[
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {}}, StatusArea[#, 2.3]& , TagBoxNote -> "2.3"], 
               StyleBox["2.3`", {}, StripOnInput -> False]], Annotation[#, 
               Style[2.3, {}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> 
               FEPrivate`Set[DynamicChart`click$121389$121547, 
                 FEPrivate`Not[DynamicChart`click$121389$121547]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             FEPrivate`If[
             DynamicChart`click$121389$121547, {{{1., 0.}, {0., 
               1.}}, {-0.19947812504646475`, -0.014438754376572044`}}, {{1, 
              0}, {0, 1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {DynamicChart`click$121389$121547}]], 
           "DelayedClickEffect"]}, {}}, {}}, {}, {}}, 
      DynamicModuleValues :> {}], {{}, {}}, {{{}, {}, {}, {}}, {}}}, 
    ContentSelectable -> False, DisplayFunction -> Identity, GridLinesStyle -> 
    Directive[
      GrayLevel[0.5, 0.4]], PlotRange -> {{-1., 1.}, {-1., 1.}}, 
    PlotRangePadding -> Scaled[0.09166666666666669]], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"1\"", "\"2\"", "\"3\"", "\"4\"", "\"5\"", "\"6\"", "\"7\"", "\"8\"", 
       "\"9\"", "\"10\"", "\"11\"", "\"12\"", "\"13\"", "\"14\"", "\"15\"", 
       "\"16\""}, "SwatchLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.761959, 0.470832, 0.940597]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.7969654, 0.5550084, 0.9498898]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[
                    0.8362105333333334, 0.6145704666666666, 
                    0.8685811333333333]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.8750956, 0.6580038, 0.746929]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[
                    0.9065614666666666, 0.6959347333333333, 
                    0.6557536666666666]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.927848, 0.742785, 0.6151383333333333]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.9440982, 0.7955892, 0.5942686]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[
                    0.9556597333333333, 0.851748, 0.5881300666666667]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #8}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.3}}, "Rows" -> {{0.5}}}], "Grid"], 
               TagBox[
                GridBox[{{
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[
                    0.9611912666666667, 0.90402, 0.5931959333333333]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #9}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.9537862, 0.937389, 0.6180996]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #10}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.929162, 0.95034, 0.6648153333333333]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #11}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[
                    0.8831367333333333, 0.9406246666666667, 
                    0.7349350666666666]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #12}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[
                    0.7952328000000001, 0.8988539999999999, 0.8302508]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #13}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[
                    0.6769960666666667, 0.8415468, 0.9091809333333333]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #14}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[
                    0.5509906666666667, 0.7769448666666667, 0.9479198]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #15}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.431296, 0.709773, 0.927077]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #16}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.3}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.761959, 0.470832, 0.940597], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5079726666666667, 0.313888, 0.6270646666666667], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.761959`", ",", "0.470832`", ",", "0.940597`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.761959, 0.470832, 0.940597]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.761959, 0.470832, 0.940597], Editable -> False,
                     Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.7969654, 0.5550084, 0.9498898], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5313102666666667, 0.3700056, 0.6332598666666667], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.7969654`", ",", "0.5550084`", ",", "0.9498898`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.7969654, 0.5550084, 0.9498898]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.7969654, 0.5550084, 0.9498898], Editable -> 
                    False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.8362105333333334, 0.6145704666666666, 
                    0.8685811333333333], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5574736888888889, 0.4097136444444444, 
                    0.5790540888888889], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.8362105333333334`", ",", "0.6145704666666666`", ",", 
                    "0.8685811333333333`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.8362105333333334, 0.6145704666666666, 
                    0.8685811333333333]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.8362105333333334, 0.6145704666666666, 
                    0.8685811333333333], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.8750956, 0.6580038, 0.746929], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5833970666666667, 0.43866920000000004`, 
                    0.49795266666666665`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.8750956`", ",", "0.6580038`", ",", "0.746929`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.8750956, 0.6580038, 0.746929]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.8750956, 0.6580038, 0.746929], Editable -> 
                    False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.9065614666666666, 0.6959347333333333, 
                    0.6557536666666666], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6043743111111111, 0.4639564888888889, 
                    0.43716911111111106`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.9065614666666666`", ",", "0.6959347333333333`", ",", 
                    "0.6557536666666666`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.9065614666666666, 0.6959347333333333, 
                    0.6557536666666666]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.9065614666666666, 0.6959347333333333, 
                    0.6557536666666666], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.927848, 0.742785, 0.6151383333333333], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6185653333333334, 0.49519, 0.41009222222222225`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.927848`", ",", "0.742785`", ",", 
                    "0.6151383333333333`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.927848, 0.742785, 0.6151383333333333]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.927848, 0.742785, 0.6151383333333333], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.9440982, 0.7955892, 0.5942686], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6293988, 0.5303928, 0.3961790666666667], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.9440982`", ",", "0.7955892`", ",", "0.5942686`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.9440982, 0.7955892, 0.5942686]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.9440982, 0.7955892, 0.5942686], Editable -> 
                    False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.9556597333333333, 0.851748, 0.5881300666666667], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6371064888888889, 0.567832, 0.39208671111111115`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.9556597333333333`", ",", "0.851748`", ",", 
                    "0.5881300666666667`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.9556597333333333, 0.851748, 0.5881300666666667]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.9556597333333333, 0.851748, 0.5881300666666667], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.9611912666666667, 0.90402, 0.5931959333333333], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6407941777777778, 0.6026800000000001, 
                    0.3954639555555556], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.9611912666666667`", ",", "0.90402`", ",", 
                    "0.5931959333333333`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.9611912666666667, 0.90402, 0.5931959333333333]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.9611912666666667, 0.90402, 0.5931959333333333],
                     Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.9537862, 0.937389, 0.6180996], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6358574666666668, 0.6249260000000001, 0.4120664], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.9537862`", ",", "0.937389`", ",", "0.6180996`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.9537862, 0.937389, 0.6180996]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.9537862, 0.937389, 0.6180996], Editable -> 
                    False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.929162, 0.95034, 0.6648153333333333], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6194413333333334, 0.63356, 0.4432102222222222],
                     FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.929162`", ",", "0.95034`", ",", 
                    "0.6648153333333333`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.929162, 0.95034, 0.6648153333333333]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.929162, 0.95034, 0.6648153333333333], Editable -> 
                    False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.8831367333333333, 0.9406246666666667, 
                    0.7349350666666666], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5887578222222223, 0.6270831111111111, 
                    0.4899567111111111], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.8831367333333333`", ",", "0.9406246666666667`", ",", 
                    "0.7349350666666666`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.8831367333333333, 0.9406246666666667, 
                    0.7349350666666666]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.8831367333333333, 0.9406246666666667, 
                    0.7349350666666666], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.7952328000000001, 0.8988539999999999, 0.8302508], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.5301552, 0.599236, 0.5535005333333334], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.7952328000000001`", ",", "0.8988539999999999`", ",", 
                    "0.8302508`"}], "]"}], NumberMarks -> False]], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.7952328000000001, 0.8988539999999999, 0.8302508]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.7952328000000001, 0.8988539999999999, 0.8302508], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.6769960666666667, 0.8415468, 0.9091809333333333], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.4513307111111111, 0.5610312000000001, 
                    0.6061206222222222], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{
                    "0.6769960666666667`", ",", "0.8415468`", ",", 
                    "0.9091809333333333`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.6769960666666667, 0.8415468, 0.9091809333333333]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.6769960666666667, 0.8415468, 0.9091809333333333], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.5509906666666667, 0.7769448666666667, 0.9479198], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.36732711111111116`, 0.5179632444444445, 
                    0.6319465333333334], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.5509906666666667`", ",", "0.7769448666666667`", ",", 
                    "0.9479198`"}], "]"}], NumberMarks -> False]], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.5509906666666667, 0.7769448666666667, 0.9479198]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.5509906666666667, 0.7769448666666667, 0.9479198], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.431296, 0.709773, 0.927077], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.2875306666666667, 0.473182, 0.6180513333333334], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.431296`", ",", "0.709773`", ",", "0.927077`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.431296, 0.709773, 0.927077]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.431296, 0.709773, 0.927077], Editable -> False,
                     Selectable -> False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, ",", #7, 
               ",", #8, ",", #9, ",", #10, ",", #11, ",", #12, ",", #13, 
               ",", #14, ",", #15, ",", #16}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 
                 RowBox[{
                  "None", ",", "None", ",", "None", ",", "None", ",", "None", 
                   ",", "None", ",", "None", ",", "None", ",", "None", ",", 
                   "None", ",", "None", ",", "None", ",", "None", ",", "None",
                    ",", "None", ",", "None"}], "}"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.902310669086279*^9, 3.902310749708175*^9, 3.902311012962777*^9, 
   3.9023646507706556`*^9, {3.9023647072040772`*^9, 3.902364724744794*^9}},
 CellLabel->
  "Out[280]=",ExpressionUUID->"d5ed3020-e3fe-4db0-a44f-981a53481562"]
}, Open  ]],

Cell["\<\
Najve\[CHacek]ji vzrok za strelske napade je psihi\[CHacek]no in \
fizi\[CHacek]no nadlegovanje ter zbadanje s strani vrstnikov. S tem problemom \
se soo\[CHacek]ajo (ve\[CHacek]inoma) vse dr\[ZHacek]ave, vendar je v ZDA oro\
\[ZHacek]je dostopnej\[SHacek]e in zato tudi ve\[CHacek]krat pride do \
tovrstnih napadov.\
\>", "Text",
 CellChangeTimes->{
  3.902324590258005*^9, {3.9023246296411*^9, 3.9023246562602625`*^9}, {
   3.9023247088122454`*^9, 3.902324891356949*^9}, {3.9023249288928657`*^9, 
   3.9023249562599983`*^9}, {3.9023249894250326`*^9, 
   3.9023250409626074`*^9}},ExpressionUUID->"674fe935-2da7-4cc5-8324-\
b1308d75311a"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Re\[SHacek]itev", "Section",
 CellChangeTimes->{{3.9017150146861577`*^9, 3.901715017454921*^9}, {
  3.902311130364684*^9, 
  3.902311130677278*^9}},ExpressionUUID->"91a3c098-95df-49fc-9587-\
46bedebb697d"],

Cell[BoxData[
 RowBox[{
  RowBox[{
  "uvod", " ", "=", " ", 
   "\"\<After the school shooting in Parkland,Florida,in 2018,psychology \
professor Paul Boxer and his colleagues reviewed research to see what could \
be learned from what they refer to as the \[OpenCurlyDoubleQuote]science of \
violence prevention.\[CloseCurlyDoubleQuote] In the wake of the May \
24,2022,massacre at Robb Elementary School in Uvalde,Texas,Boxer has \
revisited that research anew\[Dash]and other research conducted since then\
\[Dash]for insights on what can be done to reduce the risk of school \
shootings in the future.Here he offers five policy changes\[Dash]based on his \
findings\[Dash]that can be implemented to achieve that end.\>\""}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.902313401216947*^9, 3.9023134134642525`*^9}, 
   3.9023134489515347`*^9},
 CellLabel->
  "In[258]:=",ExpressionUUID->"e2345233-b18f-4fd8-8c07-47f2c0dc58c1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"TextTranslation", "[", 
    RowBox[{"uvod", ",", " ", "#"}], "]"}], "&"}], "/@", 
  RowBox[{"{", "\"\<Slovenian\>\"", "}"}]}]], "Input",
 CellChangeTimes->{{3.902313437972582*^9, 3.9023134385986853`*^9}},
 CellLabel->
  "In[260]:=",ExpressionUUID->"165067ad-4d83-4c71-a45e-8a91f394da28"],

Cell[BoxData[
 RowBox[{"{", "\<\"Po streljanju v \[SHacek]oli v Parklandu na Floridi leta \
2018 so profesor psihologije Paul Boxer in njegovi kolegi pregledali \
raziskave, da bi ugotovili, kaj bi se lahko nau\[CHacek]ili iz tega, kar \
imenujejo \\\"znanost o prepre\[CHacek]evanju nasilja\\\". Po pokolu 24. maja \
2022 na osnovni \[SHacek]oli Robb v Uvaldeju v Teksasu je Boxer ponovno preu\
\[CHacek]il to raziskavo - in druge raziskave, izvedene od takrat - za \
vpogled v to, kaj je mogo\[CHacek]e storiti za zmanj\[SHacek]anje tveganja \
streljanja v \[SHacek]oli v prihodnosti. Tukaj ponuja pet sprememb politike - \
na podlagi njegovih ugotovitev - ki jih je mogo\[CHacek]e izvesti za dosego \
tega cilja.\"\>", "}"}]], "Output",
 CellChangeTimes->{{3.9023134687628555`*^9, 3.902313489889693*^9}},
 CellLabel->
  "Out[260]=",ExpressionUUID->"ddc5e093-1780-439e-833e-2caaff014631"]
}, Open  ]],

Cell["\<\
Spremembe, navedene v njihovem \[CHacek]lanku:
1. Drasti\[CHacek]na omejitev dostopa do strelnega oro\[ZHacek]ja.
2. Ve\[CHacek]ja uporaba ocenjevanj tveganja za nasilje v \[SHacek]olah.
3. Raz\[SHacek]iritev strategij, ki temeljijo na dokazih, za \
zmanj\[SHacek]anje nasilnega vedenja.
4. Varnej\[SHacek]e \[SHacek]olske zgradbe.
5. Zmanj\[SHacek]anje izpostavljenosti nasilju na dru\[ZHacek]benih omre\
\[ZHacek]jih in v medijih.\
\>", "Text",
 CellChangeTimes->{{3.902313597869012*^9, 3.902313660895075*^9}, {
   3.902313706960284*^9, 3.9023137156970186`*^9}, 3.902313820072817*^9, {
   3.9023138638711424`*^9, 3.9023141275231094`*^9}, {3.902314167455083*^9, 
   3.9023141775096965`*^9}, {3.902314252106086*^9, 
   3.902314253643225*^9}},ExpressionUUID->"af81c7c1-45a4-40e1-95ba-\
a827fc1811f8"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1141.2, 573.6},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
TaggingRules->Association["TryRealOnly" -> False],
Magnification:>1. Inherited,
FrontEndVersion->"12.3 for Microsoft Windows (64-bit) (July 9, 2021)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"0163d0f2-f04b-4e01-9a4a-2732a123317d"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 263, 4, 98, "Title",ExpressionUUID->"ff787cd7-15b9-40e1-8d06-c97c7cbba341"],
Cell[846, 28, 478, 9, 53, "Subtitle",ExpressionUUID->"12950a24-74d2-4fd1-a402-f1fb5cdad967"],
Cell[CellGroupData[{
Cell[1349, 41, 316, 5, 67, "Section",ExpressionUUID->"7d391312-81d9-4e1b-902c-0b0d83379a68"],
Cell[1668, 48, 583, 10, 58, "Text",ExpressionUUID->"7f3b7532-d761-4362-845f-ed8a1b9cb7ee"],
Cell[CellGroupData[{
Cell[2276, 62, 362, 6, 28, "Input",ExpressionUUID->"f71982ac-59f2-4936-8914-1502992d3735"],
Cell[2641, 70, 379, 8, 35, "Output",ExpressionUUID->"a3859ce9-484c-4c61-9d24-525c05b224f8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3057, 83, 315, 5, 28, "Input",ExpressionUUID->"092ae620-faab-4438-b514-365553f94e96"],
Cell[3375, 90, 399, 8, 35, "Output",ExpressionUUID->"14db4ab0-ba81-4b9d-a5e1-3af0fd243d4e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3811, 103, 308, 5, 28, "Input",ExpressionUUID->"f28571e0-8754-4086-a224-95cfb4a90d6b"],
Cell[4122, 110, 379, 8, 35, "Output",ExpressionUUID->"aaf34bc6-82a3-40af-898e-ec88987afea9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4538, 123, 297, 5, 28, "Input",ExpressionUUID->"b000566b-ef5c-495e-ac31-b3dc15d6e908"],
Cell[4838, 130, 360, 8, 35, "Output",ExpressionUUID->"a3bee71c-9919-44fb-8d48-1dbb72e096a0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[5235, 143, 305, 5, 28, "Input",ExpressionUUID->"3cc95962-cd25-469e-ba0b-c7bfdbf9ec56"],
Cell[5543, 150, 371, 8, 35, "Output",ExpressionUUID->"7fda41f2-53ac-4486-b1b3-e130c5af2ee8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[5951, 163, 293, 6, 28, "Input",ExpressionUUID->"f70719dc-31ab-48f6-8bdc-b321363d4ba8"],
Cell[6247, 171, 340, 7, 35, "Output",ExpressionUUID->"fdb5f0a4-a24a-4474-9ee6-53d6f4fa851b"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[6636, 184, 151, 3, 67, "Section",ExpressionUUID->"dd8af3e4-3ddc-46cd-9ae0-58f469bb2e4b"],
Cell[6790, 189, 1135, 18, 104, "Text",ExpressionUUID->"f9abefa3-fd59-4151-bd54-a48b088893f6"]
}, Open  ]],
Cell[7940, 210, 176, 3, 67, "Section",ExpressionUUID->"daab2a93-bd22-4001-9b8d-e18ca464748b"],
Cell[CellGroupData[{
Cell[8141, 217, 237, 4, 53, "Subtitle",ExpressionUUID->"93c778b0-2f36-4e4b-bd9e-add5a471d252"],
Cell[8381, 223, 176, 3, 35, "Text",ExpressionUUID->"063c5712-7092-4c78-b207-5afce4b3352f"],
Cell[CellGroupData[{
Cell[8582, 230, 500, 10, 28, "Input",ExpressionUUID->"0a4626bf-e6d4-400b-840b-5b3cc32c7dec"],
Cell[9085, 242, 30682, 574, 225, "Output",ExpressionUUID->"269b8479-a396-46d3-af95-5eb62215732d"]
}, Open  ]],
Cell[39782, 819, 773, 21, 28, "Input",ExpressionUUID->"15755bb1-cf87-469c-b91a-8d51ad7e77b1"],
Cell[40558, 842, 926, 23, 28, "Input",ExpressionUUID->"cfccdcc4-41c9-4e20-9fc1-5031fdd226e2"],
Cell[41487, 867, 1473, 27, 48, "Input",ExpressionUUID->"8220b28f-b0f1-4538-9234-95daca96ff1a"],
Cell[42963, 896, 1249, 25, 48, "Input",ExpressionUUID->"a9c3962f-32b2-4607-8ce1-182acb902b94"],
Cell[CellGroupData[{
Cell[44237, 925, 402, 8, 28, "Input",ExpressionUUID->"8c2f7dce-9702-4771-81f9-b11c8709a134"],
Cell[44642, 935, 14440, 300, 231, "Output",ExpressionUUID->"5db6d363-6080-43c3-91da-d18ce986ede7"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[59131, 1241, 209, 4, 53, "Subtitle",ExpressionUUID->"e86d9172-3e26-4599-8b0e-048b68f304c3"],
Cell[CellGroupData[{
Cell[59365, 1249, 375, 8, 28, "Input",ExpressionUUID->"130fcddf-57bf-4dc2-9f95-466ce9d1e7d0"],
Cell[59743, 1259, 36814, 706, 333, "Output",ExpressionUUID->"df250abc-559d-4fa8-a2fc-2bae7dde719c"]
}, Open  ]],
Cell[96572, 1968, 721, 20, 28, "Input",ExpressionUUID->"8561ade4-dd0e-4daa-908e-04b25e573e3a"],
Cell[97296, 1990, 751, 20, 28, "Input",ExpressionUUID->"3f0ada56-9654-4d02-93ee-db6b299d9e0b"],
Cell[98050, 2012, 915, 20, 48, "Input",ExpressionUUID->"4fdf0cf1-b55d-4d4c-9179-e901708f6187"],
Cell[98968, 2034, 928, 21, 48, "Input",ExpressionUUID->"fe0f2c39-ce52-48d1-a83a-986527464223"],
Cell[CellGroupData[{
Cell[99921, 2059, 302, 6, 28, "Input",ExpressionUUID->"79401dd0-a43a-4e34-9f09-cd513992fba4"],
Cell[100226, 2067, 14324, 298, 228, "Output",ExpressionUUID->"a558fd9b-dde7-4c55-a993-5e06cba6af16"]
}, Open  ]],
Cell[114565, 2368, 173, 3, 67, "Section",ExpressionUUID->"98c0bb99-248e-4ab8-9ab5-aa0f9c1dfb69"]
}, Open  ]],
Cell[CellGroupData[{
Cell[114775, 2376, 158, 3, 53, "Subtitle",ExpressionUUID->"f4d40c44-78c5-45d9-9a0b-ebaf85307408"],
Cell[CellGroupData[{
Cell[114958, 2383, 473, 10, 28, "Input",ExpressionUUID->"3651266f-3ded-4015-9159-109fd3ac0ef4"],
Cell[115434, 2395, 25973, 472, 144, "Output",ExpressionUUID->"809675f7-a1a5-4aab-9216-889abe0a76f5"]
}, Open  ]],
Cell[141422, 2870, 671, 19, 28, "Input",ExpressionUUID->"09afaf33-ad7d-445c-b2e6-30335e32a670"],
Cell[142096, 2891, 673, 19, 28, "Input",ExpressionUUID->"ed1f5475-9ea8-4669-924a-a354627cdee5"],
Cell[142772, 2912, 915, 20, 48, "Input",ExpressionUUID->"b7fc7877-b13b-4e9e-94f8-3c4910a449fe"],
Cell[143690, 2934, 930, 21, 48, "Input",ExpressionUUID->"c0024ea4-d0cc-43c7-9049-b6041fcb2573"],
Cell[CellGroupData[{
Cell[144645, 2959, 346, 7, 28, "Input",ExpressionUUID->"1527386c-109d-4934-ac48-e7e83d34243e"],
Cell[144994, 2968, 14007, 295, 228, "Output",ExpressionUUID->"a1cb966c-550d-45bc-9a66-9200a64461d8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[159038, 3268, 176, 3, 67, "Section",ExpressionUUID->"74fda6f0-5ddb-4a1f-b0a3-a1284c616bcf"],
Cell[CellGroupData[{
Cell[159239, 3275, 411, 9, 28, "Input",ExpressionUUID->"86f434ff-0b28-4769-90be-02d89ef789ce"],
Cell[159653, 3286, 34164, 644, 279, "Output",ExpressionUUID->"f88ebf6d-3957-488b-9a76-b1d3ee61b455"]
}, Open  ]],
Cell[193832, 3933, 682, 20, 28, "Input",ExpressionUUID->"f5712595-790d-4385-a49c-26d778c9c017"],
Cell[194517, 3955, 657, 19, 28, "Input",ExpressionUUID->"073ab330-de85-4a4b-bcb2-552a52bba2f4"],
Cell[195177, 3976, 1206, 24, 48, "Input",ExpressionUUID->"879c3471-b738-4620-91e3-97d150e6300d"],
Cell[196386, 4002, 1274, 26, 48, "Input",ExpressionUUID->"8fdabb93-155c-490f-ba39-a1ffb7dc3ae4"],
Cell[CellGroupData[{
Cell[197685, 4032, 349, 7, 28, "Input",ExpressionUUID->"392c89b2-6b82-4d57-a0bc-f954acc4c7a1"],
Cell[198037, 4041, 14446, 301, 229, "Output",ExpressionUUID->"6043787b-83b6-4369-8bac-491666ac827e"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[212532, 4348, 178, 3, 67, "Section",ExpressionUUID->"dfb1d16d-e230-4d30-8cd6-2c06068d0157"],
Cell[CellGroupData[{
Cell[212735, 4355, 387, 9, 28, "Input",ExpressionUUID->"621bbb00-afec-4754-9051-09eaed32849e"],
Cell[213125, 4366, 50777, 1006, 576, "Output",ExpressionUUID->"8f1cd88b-f021-4a2c-b6e0-eeb4357c5236"]
}, Open  ]],
Cell[263917, 5375, 656, 19, 28, "Input",ExpressionUUID->"1531bb24-7104-4c0a-8aec-857c635022e0"],
Cell[264576, 5396, 706, 20, 48, "Input",ExpressionUUID->"775e1a9f-ff20-4870-b41f-992dbe6f349d"],
Cell[265285, 5418, 1111, 23, 48, "Input",ExpressionUUID->"dd832270-4796-45e3-bba1-12262a81c7a2"],
Cell[266399, 5443, 976, 22, 48, "Input",ExpressionUUID->"d3c5470e-e10c-4411-af07-0f3218d6dda7"],
Cell[CellGroupData[{
Cell[267400, 5469, 232, 5, 28, "Input",ExpressionUUID->"b1459f6e-46c2-44f8-b888-b4ccae7acc1b"],
Cell[267635, 5476, 14430, 304, 228, "Output",ExpressionUUID->"e5bcd548-3189-4d9a-9994-d01195eaaeb4"]
}, Open  ]],
Cell[282080, 5783, 404, 8, 35, "Text",ExpressionUUID->"fb8921d6-bb6b-48e0-871c-b8590d9cb6c6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[282521, 5796, 262, 5, 67, "Section",ExpressionUUID->"5a17a84b-14c4-4db2-b06c-02f12d1a151d"],
Cell[CellGroupData[{
Cell[282808, 5805, 568, 10, 28, "Input",ExpressionUUID->"9cd34f1c-8d81-4390-93d4-97d9d0e582f5"],
Cell[283379, 5817, 31858, 588, 333, "Output",ExpressionUUID->"c938fab1-57da-4f98-8c04-1e59c792f270"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[315286, 6411, 240, 4, 67, "Section",ExpressionUUID->"74871e7e-0500-4385-b105-0c18de1a4533"],
Cell[315529, 6417, 444, 8, 35, "Text",ExpressionUUID->"d79891aa-6791-4620-8474-504289b8ff84"],
Cell[CellGroupData[{
Cell[315998, 6429, 364, 7, 28, "Input",ExpressionUUID->"e7268da5-e008-49ff-8eba-dbd7b6e39649"],
Cell[316365, 6438, 39659, 755, 549, "Output",ExpressionUUID->"edbc3514-7b3e-4b7a-9dd3-8f6d92e53d2a"]
}, Open  ]],
Cell[356039, 7196, 784, 20, 28, "Input",ExpressionUUID->"b5496c72-5143-46c9-955e-56423aee7859"],
Cell[CellGroupData[{
Cell[356848, 7220, 1025, 22, 53, "Input",ExpressionUUID->"440f80cd-eaa5-47b1-8ff1-e85e385e9d59"],
Cell[357876, 7244, 25335, 618, 375, "Output",ExpressionUUID->"789471c7-1e62-4805-8135-0edfb3823a58"]
}, Open  ]],
Cell[383226, 7865, 413, 8, 58, "Text",ExpressionUUID->"c405f6ed-7352-4afe-bbec-50243df2b610"]
}, Open  ]],
Cell[CellGroupData[{
Cell[383676, 7878, 229, 4, 67, "Section",ExpressionUUID->"bd201405-fc97-41b9-a854-92b816715a02"],
Cell[CellGroupData[{
Cell[383930, 7886, 354, 8, 28, "Input",ExpressionUUID->"16a8e731-50b3-4f34-9b5f-b9b2c5005998"],
Cell[384287, 7896, 56769, 1111, 495, "Output",ExpressionUUID->"4dd29025-31e3-42d5-8117-654469ba0727"]
}, Open  ]],
Cell[CellGroupData[{
Cell[441093, 9012, 1085, 21, 48, "Input",ExpressionUUID->"c4432834-3114-4a7c-8df4-906a94fd3539"],
Cell[442181, 9035, 138289, 2843, 379, "Output",ExpressionUUID->"d5ed3020-e3fe-4db0-a44f-981a53481562"]
}, Open  ]],
Cell[580485, 11881, 648, 12, 58, "Text",ExpressionUUID->"674fe935-2da7-4cc5-8324-b1308d75311a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[581170, 11898, 211, 4, 67, "Section",ExpressionUUID->"91a3c098-95df-49fc-9587-46bedebb697d"],
Cell[581384, 11904, 926, 17, 124, "Input",ExpressionUUID->"e2345233-b18f-4fd8-8c07-47f2c0dc58c1"],
Cell[CellGroupData[{
Cell[582335, 11925, 334, 8, 28, "Input",ExpressionUUID->"165067ad-4d83-4c71-a45e-8a91f394da28"],
Cell[582672, 11935, 890, 13, 109, "Output",ExpressionUUID->"ddc5e093-1780-439e-833e-2caaff014631"]
}, Open  ]],
Cell[583577, 11951, 809, 15, 150, "Text",ExpressionUUID->"af81c7c1-45a4-40e1-95ba-a827fc1811f8"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

